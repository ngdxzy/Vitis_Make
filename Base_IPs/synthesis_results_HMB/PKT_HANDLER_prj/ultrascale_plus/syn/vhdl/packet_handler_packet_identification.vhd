-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity packet_handler_packet_identification is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    s_axis_TVALID : IN STD_LOGIC;
    eth_level_pkt_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
    eth_level_pkt_full_n : IN STD_LOGIC;
    eth_level_pkt_write : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    s_axis_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    s_axis_TREADY : OUT STD_LOGIC;
    s_axis_TKEEP : IN STD_LOGIC_VECTOR (63 downto 0);
    s_axis_TSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
    s_axis_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    s_axis_TDEST : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of packet_handler_packet_identification is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv16_800 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_806 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_74 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110100";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_B8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv8_11 : STD_LOGIC_VECTOR (7 downto 0) := "00010001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal internal_ap_ready : STD_LOGIC;
    signal grp_nbreadreq_fu_86_p7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op13_read_state1 : BOOLEAN;
    signal ap_predicate_op21_read_state1 : BOOLEAN;
    signal ap_predicate_op32_read_state1 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal pi_fsm_state_load_reg_329 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_reg_339 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op59_write_state2 : BOOLEAN;
    signal tmp_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ethernetType_V_reg_357 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1049_1_reg_369 : STD_LOGIC_VECTOR (0 downto 0);
    signal ipProtocol_V_reg_361 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1049_reg_365 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op66_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal pi_fsm_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal tdest_r_V : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal s_axis_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal eth_level_pkt_blk_n : STD_LOGIC;
    signal reg_179 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_183 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_167_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_343 : STD_LOGIC_VECTOR (0 downto 0);
    signal sendWord_last_V_1_reg_352 : STD_LOGIC_VECTOR (0 downto 0);
    signal ethernetType_V_fu_223_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ipProtocol_V_fu_241_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1049_fu_251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_1_fu_257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_storemerge_i_phi_fu_126_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge_i_reg_123 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter0_tdest_5_ph_i_reg_134 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter1_tdest_5_ph_i_reg_134 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_tdest_54_i_phi_fu_159_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter0_tdest_54_i_reg_155 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter1_tdest_54_i_reg_155 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln235_fu_269_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln174_fu_300_p1 : STD_LOGIC_VECTOR (1023 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln174_1_fu_324_p1 : STD_LOGIC_VECTOR (1023 downto 0);
    signal p_Result_2_i_fu_213_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_i_fu_203_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ipVersion_V_fu_231_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_287_p6 : STD_LOGIC_VECTOR (585 downto 0);
    signal tmp_3_fu_311_p6 : STD_LOGIC_VECTOR (585 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_s_axis_V_data_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_TDATA_int_regslice : STD_LOGIC_VECTOR (511 downto 0);
    signal s_axis_TVALID_int_regslice : STD_LOGIC;
    signal s_axis_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_s_axis_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_s_axis_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_TKEEP_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_s_axis_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_s_axis_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_s_axis_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_TSTRB_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_s_axis_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_s_axis_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_s_axis_V_last_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_s_axis_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_s_axis_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_s_axis_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_TDEST_int_regslice : STD_LOGIC_VECTOR (2 downto 0);
    signal regslice_both_s_axis_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_s_axis_V_dest_V_U_ack_in : STD_LOGIC;
    signal ap_condition_241 : BOOLEAN;
    signal ap_condition_173 : BOOLEAN;
    signal ap_condition_214 : BOOLEAN;
    signal ap_condition_233 : BOOLEAN;
    signal ap_condition_235 : BOOLEAN;
    signal ap_condition_275 : BOOLEAN;
    signal ap_condition_458 : BOOLEAN;
    signal ap_condition_463 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component packet_handler_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_s_axis_V_data_V_U : component packet_handler_regslice_both
    generic map (
        DataWidth => 512)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_TDATA,
        vld_in => s_axis_TVALID,
        ack_in => regslice_both_s_axis_V_data_V_U_ack_in,
        data_out => s_axis_TDATA_int_regslice,
        vld_out => s_axis_TVALID_int_regslice,
        ack_out => s_axis_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_V_data_V_U_apdone_blk);

    regslice_both_s_axis_V_keep_V_U : component packet_handler_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_TKEEP,
        vld_in => s_axis_TVALID,
        ack_in => regslice_both_s_axis_V_keep_V_U_ack_in,
        data_out => s_axis_TKEEP_int_regslice,
        vld_out => regslice_both_s_axis_V_keep_V_U_vld_out,
        ack_out => s_axis_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_V_keep_V_U_apdone_blk);

    regslice_both_s_axis_V_strb_V_U : component packet_handler_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_TSTRB,
        vld_in => s_axis_TVALID,
        ack_in => regslice_both_s_axis_V_strb_V_U_ack_in,
        data_out => s_axis_TSTRB_int_regslice,
        vld_out => regslice_both_s_axis_V_strb_V_U_vld_out,
        ack_out => s_axis_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_V_strb_V_U_apdone_blk);

    regslice_both_s_axis_V_last_V_U : component packet_handler_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_TLAST,
        vld_in => s_axis_TVALID,
        ack_in => regslice_both_s_axis_V_last_V_U_ack_in,
        data_out => s_axis_TLAST_int_regslice,
        vld_out => regslice_both_s_axis_V_last_V_U_vld_out,
        ack_out => s_axis_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_V_last_V_U_apdone_blk);

    regslice_both_s_axis_V_dest_V_U : component packet_handler_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_TDEST,
        vld_in => s_axis_TVALID,
        ack_in => regslice_both_s_axis_V_dest_V_U_ack_in,
        data_out => s_axis_TDEST_int_regslice,
        vld_out => regslice_both_s_axis_V_dest_V_U_vld_out,
        ack_out => s_axis_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= real_start;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_tdest_54_i_reg_155_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_173)) then
                if ((ap_const_boolean_1 = ap_condition_241)) then 
                    ap_phi_reg_pp0_iter1_tdest_54_i_reg_155 <= ap_const_lv2_3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_tdest_54_i_reg_155 <= ap_phi_reg_pp0_iter0_tdest_54_i_reg_155;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_tdest_5_ph_i_reg_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_173)) then
                if ((ap_const_boolean_1 = ap_condition_235)) then 
                    ap_phi_reg_pp0_iter1_tdest_5_ph_i_reg_134 <= ap_const_lv2_1;
                elsif ((ap_const_boolean_1 = ap_condition_233)) then 
                    ap_phi_reg_pp0_iter1_tdest_5_ph_i_reg_134 <= ap_const_lv2_2;
                elsif ((ap_const_boolean_1 = ap_condition_214)) then 
                    ap_phi_reg_pp0_iter1_tdest_5_ph_i_reg_134 <= ap_const_lv2_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_tdest_5_ph_i_reg_134 <= ap_phi_reg_pp0_iter0_tdest_5_ph_i_reg_134;
                end if;
            end if; 
        end if;
    end process;

    pi_fsm_state_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                pi_fsm_state <= select_ln235_fu_269_p3;
            elsif ((((grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (grp_fu_167_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_2) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (grp_fu_167_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                pi_fsm_state <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    tdest_r_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_463)) then 
                    tdest_r_V <= ap_const_lv2_3;
                elsif ((ap_const_boolean_1 = ap_condition_458)) then 
                    tdest_r_V <= ap_phi_reg_pp0_iter1_tdest_5_ph_i_reg_134;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ethernetType_V_reg_357 <= ethernetType_V_fu_223_p3;
                ipProtocol_V_reg_361 <= s_axis_TDATA_int_regslice(191 downto 184);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ipProtocol_V_fu_241_p4 = ap_const_lv8_6)) and not((ipProtocol_V_fu_241_p4 = ap_const_lv8_1)) and (grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1049_fu_251_p2 = ap_const_lv1_1) and (ethernetType_V_fu_223_p3 = ap_const_lv16_800) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln1049_1_reg_369 <= icmp_ln1049_1_fu_257_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ethernetType_V_fu_223_p3 = ap_const_lv16_800) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln1049_reg_365 <= icmp_ln1049_fu_251_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                pi_fsm_state_load_reg_329 <= pi_fsm_state;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_179 <= s_axis_TDATA_int_regslice;
                reg_183 <= s_axis_TKEEP_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sendWord_last_V_1_reg_352 <= s_axis_TLAST_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_11_reg_343 <= s_axis_TLAST_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((pi_fsm_state = ap_const_lv2_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_1_reg_339 <= grp_nbreadreq_fu_86_p7;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((pi_fsm_state = ap_const_lv2_0) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_reg_348 <= grp_nbreadreq_fu_86_p7;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(real_start, ap_enable_reg_pp0_iter1, ap_predicate_op13_read_state1, ap_predicate_op21_read_state1, ap_predicate_op32_read_state1, ap_done_reg, eth_level_pkt_full_n, ap_predicate_op59_write_state2, ap_predicate_op66_write_state2, s_axis_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((real_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op32_read_state1 = ap_const_boolean_1) and (s_axis_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op21_read_state1 = ap_const_boolean_1) and (s_axis_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op13_read_state1 = ap_const_boolean_1) and (s_axis_TVALID_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op59_write_state2 = ap_const_boolean_1) and (eth_level_pkt_full_n = ap_const_logic_0)) or ((eth_level_pkt_full_n = ap_const_logic_0) and (ap_predicate_op66_write_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(real_start, ap_enable_reg_pp0_iter1, ap_predicate_op13_read_state1, ap_predicate_op21_read_state1, ap_predicate_op32_read_state1, ap_done_reg, eth_level_pkt_full_n, ap_predicate_op59_write_state2, ap_predicate_op66_write_state2, s_axis_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((real_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op32_read_state1 = ap_const_boolean_1) and (s_axis_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op21_read_state1 = ap_const_boolean_1) and (s_axis_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op13_read_state1 = ap_const_boolean_1) and (s_axis_TVALID_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op59_write_state2 = ap_const_boolean_1) and (eth_level_pkt_full_n = ap_const_logic_0)) or ((eth_level_pkt_full_n = ap_const_logic_0) and (ap_predicate_op66_write_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(real_start, ap_enable_reg_pp0_iter1, ap_predicate_op13_read_state1, ap_predicate_op21_read_state1, ap_predicate_op32_read_state1, ap_done_reg, eth_level_pkt_full_n, ap_predicate_op59_write_state2, ap_predicate_op66_write_state2, s_axis_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((real_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op32_read_state1 = ap_const_boolean_1) and (s_axis_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op21_read_state1 = ap_const_boolean_1) and (s_axis_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op13_read_state1 = ap_const_boolean_1) and (s_axis_TVALID_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op59_write_state2 = ap_const_boolean_1) and (eth_level_pkt_full_n = ap_const_logic_0)) or ((eth_level_pkt_full_n = ap_const_logic_0) and (ap_predicate_op66_write_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_predicate_op13_read_state1, ap_predicate_op21_read_state1, ap_predicate_op32_read_state1, ap_done_reg, s_axis_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op32_read_state1 = ap_const_boolean_1) and (s_axis_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op21_read_state1 = ap_const_boolean_1) and (s_axis_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op13_read_state1 = ap_const_boolean_1) and (s_axis_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(eth_level_pkt_full_n, ap_predicate_op59_write_state2, ap_predicate_op66_write_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((ap_predicate_op59_write_state2 = ap_const_boolean_1) and (eth_level_pkt_full_n = ap_const_logic_0)) or ((eth_level_pkt_full_n = ap_const_logic_0) and (ap_predicate_op66_write_state2 = ap_const_boolean_1)));
    end process;


    ap_condition_173_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_173 <= ((real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_214_assign_proc : process(grp_nbreadreq_fu_86_p7, pi_fsm_state, ethernetType_V_fu_223_p3)
    begin
                ap_condition_214 <= ((grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0) and (ethernetType_V_fu_223_p3 = ap_const_lv16_806));
    end process;


    ap_condition_233_assign_proc : process(grp_nbreadreq_fu_86_p7, pi_fsm_state, ethernetType_V_fu_223_p3, ipProtocol_V_fu_241_p4, icmp_ln1049_fu_251_p2)
    begin
                ap_condition_233 <= ((grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0) and (icmp_ln1049_fu_251_p2 = ap_const_lv1_1) and (ipProtocol_V_fu_241_p4 = ap_const_lv8_6) and (ethernetType_V_fu_223_p3 = ap_const_lv16_800));
    end process;


    ap_condition_235_assign_proc : process(grp_nbreadreq_fu_86_p7, pi_fsm_state, ethernetType_V_fu_223_p3, ipProtocol_V_fu_241_p4, icmp_ln1049_fu_251_p2)
    begin
                ap_condition_235 <= ((grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0) and (icmp_ln1049_fu_251_p2 = ap_const_lv1_1) and (ipProtocol_V_fu_241_p4 = ap_const_lv8_1) and (ethernetType_V_fu_223_p3 = ap_const_lv16_800));
    end process;


    ap_condition_241_assign_proc : process(grp_nbreadreq_fu_86_p7, pi_fsm_state, ethernetType_V_fu_223_p3, ipProtocol_V_fu_241_p4, icmp_ln1049_fu_251_p2, icmp_ln1049_1_fu_257_p2)
    begin
                ap_condition_241 <= (not((ipProtocol_V_fu_241_p4 = ap_const_lv8_6)) and not((ipProtocol_V_fu_241_p4 = ap_const_lv8_1)) and (grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0) and (icmp_ln1049_1_fu_257_p2 = ap_const_lv1_1) and (icmp_ln1049_fu_251_p2 = ap_const_lv1_1) and (ethernetType_V_fu_223_p3 = ap_const_lv16_800));
    end process;


    ap_condition_275_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001)
    begin
                ap_condition_275 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001));
    end process;


    ap_condition_458_assign_proc : process(ap_enable_reg_pp0_iter1, pi_fsm_state_load_reg_329, tmp_reg_348, ethernetType_V_reg_357, ipProtocol_V_reg_361, icmp_ln1049_reg_365)
    begin
                ap_condition_458 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((((ipProtocol_V_reg_361 = ap_const_lv8_1) and (ethernetType_V_reg_357 = ap_const_lv16_800) and (tmp_reg_348 = ap_const_lv1_1) and (pi_fsm_state_load_reg_329 = ap_const_lv2_0)) or ((ipProtocol_V_reg_361 = ap_const_lv8_6) and (ethernetType_V_reg_357 = ap_const_lv16_800) and (tmp_reg_348 = ap_const_lv1_1) and (pi_fsm_state_load_reg_329 = ap_const_lv2_0))) or ((ethernetType_V_reg_357 = ap_const_lv16_800) and (tmp_reg_348 = ap_const_lv1_1) and (pi_fsm_state_load_reg_329 = ap_const_lv2_0) and (icmp_ln1049_reg_365 = ap_const_lv1_0))) or ((ethernetType_V_reg_357 = ap_const_lv16_806) and (tmp_reg_348 = ap_const_lv1_1) and (pi_fsm_state_load_reg_329 = ap_const_lv2_0))));
    end process;


    ap_condition_463_assign_proc : process(real_start, grp_nbreadreq_fu_86_p7, pi_fsm_state, ethernetType_V_fu_223_p3, ipProtocol_V_fu_241_p4, icmp_ln1049_fu_251_p2)
    begin
                ap_condition_463 <= (not((ipProtocol_V_fu_241_p4 = ap_const_lv8_6)) and not((ipProtocol_V_fu_241_p4 = ap_const_lv8_1)) and (grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0) and (real_start = ap_const_logic_1) and (icmp_ln1049_fu_251_p2 = ap_const_lv1_1) and (ethernetType_V_fu_223_p3 = ap_const_lv16_800));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_done_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= real_start;

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((real_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_storemerge_i_phi_fu_126_p4_assign_proc : process(grp_nbreadreq_fu_86_p7, pi_fsm_state, ethernetType_V_fu_223_p3, ipProtocol_V_fu_241_p4, icmp_ln1049_fu_251_p2, icmp_ln1049_1_fu_257_p2, ap_phi_reg_pp0_iter0_storemerge_i_reg_123)
    begin
        if (((not((ethernetType_V_fu_223_p3 = ap_const_lv16_806)) and not((ethernetType_V_fu_223_p3 = ap_const_lv16_800)) and (grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0)) or (not((ethernetType_V_fu_223_p3 = ap_const_lv16_806)) and not((ipProtocol_V_fu_241_p4 = ap_const_lv8_6)) and not((ipProtocol_V_fu_241_p4 = ap_const_lv8_1)) and (grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0) and (icmp_ln1049_1_fu_257_p2 = ap_const_lv1_0) and (icmp_ln1049_fu_251_p2 = ap_const_lv1_1)))) then 
            ap_phi_mux_storemerge_i_phi_fu_126_p4 <= ap_const_lv2_2;
        elsif (((((((grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0) and (icmp_ln1049_1_fu_257_p2 = ap_const_lv1_1) and (ethernetType_V_fu_223_p3 = ap_const_lv16_800)) or ((grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0) and (ipProtocol_V_fu_241_p4 = ap_const_lv8_6) and (ethernetType_V_fu_223_p3 = ap_const_lv16_800))) or ((grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0) and (ipProtocol_V_fu_241_p4 = ap_const_lv8_1) and (ethernetType_V_fu_223_p3 = ap_const_lv16_800))) or ((grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0) and (icmp_ln1049_fu_251_p2 = ap_const_lv1_0) and (ethernetType_V_fu_223_p3 = ap_const_lv16_800))) or ((grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0) and (ethernetType_V_fu_223_p3 = ap_const_lv16_806)))) then 
            ap_phi_mux_storemerge_i_phi_fu_126_p4 <= ap_const_lv2_1;
        else 
            ap_phi_mux_storemerge_i_phi_fu_126_p4 <= ap_phi_reg_pp0_iter0_storemerge_i_reg_123;
        end if; 
    end process;


    ap_phi_mux_tdest_54_i_phi_fu_159_p4_assign_proc : process(pi_fsm_state_load_reg_329, tmp_reg_348, ethernetType_V_reg_357, ipProtocol_V_reg_361, icmp_ln1049_reg_365, ap_phi_reg_pp0_iter1_tdest_5_ph_i_reg_134, ap_phi_reg_pp0_iter1_tdest_54_i_reg_155)
    begin
        if ((((((ipProtocol_V_reg_361 = ap_const_lv8_1) and (ethernetType_V_reg_357 = ap_const_lv16_800) and (tmp_reg_348 = ap_const_lv1_1) and (pi_fsm_state_load_reg_329 = ap_const_lv2_0)) or ((ipProtocol_V_reg_361 = ap_const_lv8_6) and (ethernetType_V_reg_357 = ap_const_lv16_800) and (tmp_reg_348 = ap_const_lv1_1) and (pi_fsm_state_load_reg_329 = ap_const_lv2_0))) or ((ethernetType_V_reg_357 = ap_const_lv16_800) and (tmp_reg_348 = ap_const_lv1_1) and (pi_fsm_state_load_reg_329 = ap_const_lv2_0) and (icmp_ln1049_reg_365 = ap_const_lv1_0))) or ((ethernetType_V_reg_357 = ap_const_lv16_806) and (tmp_reg_348 = ap_const_lv1_1) and (pi_fsm_state_load_reg_329 = ap_const_lv2_0)))) then 
            ap_phi_mux_tdest_54_i_phi_fu_159_p4 <= ap_phi_reg_pp0_iter1_tdest_5_ph_i_reg_134;
        else 
            ap_phi_mux_tdest_54_i_phi_fu_159_p4 <= ap_phi_reg_pp0_iter1_tdest_54_i_reg_155;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge_i_reg_123 <= "XX";
    ap_phi_reg_pp0_iter0_tdest_54_i_reg_155 <= "XX";
    ap_phi_reg_pp0_iter0_tdest_5_ph_i_reg_134 <= "XX";

    ap_predicate_op13_read_state1_assign_proc : process(grp_nbreadreq_fu_86_p7, pi_fsm_state)
    begin
                ap_predicate_op13_read_state1 <= ((grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_2));
    end process;


    ap_predicate_op21_read_state1_assign_proc : process(grp_nbreadreq_fu_86_p7, pi_fsm_state)
    begin
                ap_predicate_op21_read_state1 <= ((grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_1));
    end process;


    ap_predicate_op32_read_state1_assign_proc : process(grp_nbreadreq_fu_86_p7, pi_fsm_state)
    begin
                ap_predicate_op32_read_state1 <= ((grp_nbreadreq_fu_86_p7 = ap_const_lv1_1) and (pi_fsm_state = ap_const_lv2_0));
    end process;


    ap_predicate_op59_write_state2_assign_proc : process(pi_fsm_state_load_reg_329, tmp_1_reg_339)
    begin
                ap_predicate_op59_write_state2 <= ((tmp_1_reg_339 = ap_const_lv1_1) and (pi_fsm_state_load_reg_329 = ap_const_lv2_1));
    end process;


    ap_predicate_op66_write_state2_assign_proc : process(pi_fsm_state_load_reg_329, tmp_reg_348, ethernetType_V_reg_357, icmp_ln1049_1_reg_369, ipProtocol_V_reg_361, icmp_ln1049_reg_365)
    begin
                ap_predicate_op66_write_state2 <= ((((((ipProtocol_V_reg_361 = ap_const_lv8_6) and (ethernetType_V_reg_357 = ap_const_lv16_800) and (tmp_reg_348 = ap_const_lv1_1) and (pi_fsm_state_load_reg_329 = ap_const_lv2_0)) or ((icmp_ln1049_1_reg_369 = ap_const_lv1_1) and (ethernetType_V_reg_357 = ap_const_lv16_800) and (tmp_reg_348 = ap_const_lv1_1) and (pi_fsm_state_load_reg_329 = ap_const_lv2_0))) or ((ipProtocol_V_reg_361 = ap_const_lv8_1) and (ethernetType_V_reg_357 = ap_const_lv16_800) and (tmp_reg_348 = ap_const_lv1_1) and (pi_fsm_state_load_reg_329 = ap_const_lv2_0))) or ((ethernetType_V_reg_357 = ap_const_lv16_800) and (tmp_reg_348 = ap_const_lv1_1) and (pi_fsm_state_load_reg_329 = ap_const_lv2_0) and (icmp_ln1049_reg_365 = ap_const_lv1_0))) or ((ethernetType_V_reg_357 = ap_const_lv16_806) and (tmp_reg_348 = ap_const_lv1_1) and (pi_fsm_state_load_reg_329 = ap_const_lv2_0)));
    end process;

    ap_ready <= internal_ap_ready;

    ap_reset_idle_pp0_assign_proc : process(real_start, ap_idle_pp0_0to0)
    begin
        if (((real_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    eth_level_pkt_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, eth_level_pkt_full_n, ap_predicate_op59_write_state2, ap_predicate_op66_write_state2, ap_block_pp0_stage0)
    begin
        if ((((ap_predicate_op59_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op66_write_state2 = ap_const_boolean_1)))) then 
            eth_level_pkt_blk_n <= eth_level_pkt_full_n;
        else 
            eth_level_pkt_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    eth_level_pkt_din_assign_proc : process(ap_predicate_op59_write_state2, ap_predicate_op66_write_state2, zext_ln174_fu_300_p1, zext_ln174_1_fu_324_p1, ap_condition_275)
    begin
        if ((ap_const_boolean_1 = ap_condition_275)) then
            if ((ap_predicate_op66_write_state2 = ap_const_boolean_1)) then 
                eth_level_pkt_din <= zext_ln174_1_fu_324_p1;
            elsif ((ap_predicate_op59_write_state2 = ap_const_boolean_1)) then 
                eth_level_pkt_din <= zext_ln174_fu_300_p1;
            else 
                eth_level_pkt_din
            end if;
        else 
            eth_level_pkt_din
        end if; 
    end process;


    eth_level_pkt_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op59_write_state2, ap_predicate_op66_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op59_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op66_write_state2 = ap_const_boolean_1)))) then 
            eth_level_pkt_write <= ap_const_logic_1;
        else 
            eth_level_pkt_write <= ap_const_logic_0;
        end if; 
    end process;

    ethernetType_V_fu_223_p3 <= (p_Result_2_i_fu_213_p4 & p_Result_1_i_fu_203_p4);
    grp_fu_167_p1 <= s_axis_TLAST_int_regslice;
    grp_nbreadreq_fu_86_p7 <= (0=>(s_axis_TVALID_int_regslice), others=>'-');
    icmp_ln1049_1_fu_257_p2 <= "1" when (ipProtocol_V_fu_241_p4 = ap_const_lv8_11) else "0";
    icmp_ln1049_fu_251_p2 <= "1" when (ipVersion_V_fu_231_p4 = ap_const_lv4_4) else "0";

    internal_ap_ready_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone)
    begin
        if (((real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ipProtocol_V_fu_241_p4 <= s_axis_TDATA_int_regslice(191 downto 184);
    ipVersion_V_fu_231_p4 <= s_axis_TDATA_int_regslice(119 downto 116);
    p_Result_1_i_fu_203_p4 <= s_axis_TDATA_int_regslice(111 downto 104);
    p_Result_2_i_fu_213_p4 <= s_axis_TDATA_int_regslice(103 downto 96);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    s_axis_TDATA_blk_n_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_predicate_op13_read_state1, ap_predicate_op21_read_state1, ap_predicate_op32_read_state1, ap_done_reg, ap_block_pp0_stage0, s_axis_TVALID_int_regslice)
    begin
        if ((((ap_done_reg = ap_const_logic_0) and (ap_predicate_op32_read_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_done_reg = ap_const_logic_0) and (ap_predicate_op21_read_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_done_reg = ap_const_logic_0) and (ap_predicate_op13_read_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            s_axis_TDATA_blk_n <= s_axis_TVALID_int_regslice;
        else 
            s_axis_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    s_axis_TREADY <= regslice_both_s_axis_V_data_V_U_ack_in;

    s_axis_TREADY_int_regslice_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_predicate_op13_read_state1, ap_predicate_op21_read_state1, ap_predicate_op32_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op32_read_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op21_read_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op13_read_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            s_axis_TREADY_int_regslice <= ap_const_logic_1;
        else 
            s_axis_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    select_ln235_fu_269_p3 <= 
        ap_const_lv2_0 when (s_axis_TLAST_int_regslice(0) = '1') else 
        ap_phi_mux_storemerge_i_phi_fu_126_p4;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_3_fu_311_p6 <= ((((ap_phi_mux_tdest_54_i_phi_fu_159_p4 & ap_const_lv7_0) & sendWord_last_V_1_reg_352) & reg_183) & reg_179);
    tmp_s_fu_287_p6 <= ((((tdest_r_V & ap_const_lv7_0) & tmp_11_reg_343) & reg_183) & reg_179);
    zext_ln174_1_fu_324_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_311_p6),1024));
    zext_ln174_fu_300_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_287_p6),1024));
end behav;
