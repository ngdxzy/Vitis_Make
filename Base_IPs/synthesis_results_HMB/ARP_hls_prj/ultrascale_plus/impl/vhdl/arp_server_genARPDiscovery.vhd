-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity arp_server_genARPDiscovery is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    macIpEncode_req_V_TVALID : IN STD_LOGIC;
    macIpEncode_rsp_i_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    macIpEncode_rsp_i_empty_n : IN STD_LOGIC;
    macIpEncode_rsp_i_read : OUT STD_LOGIC;
    macIpEncode_i_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    macIpEncode_i_full_n : IN STD_LOGIC;
    macIpEncode_i_write : OUT STD_LOGIC;
    macIpEncode_rsp_V_TREADY : IN STD_LOGIC;
    macIpEncode_req_V_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    macIpEncode_req_V_TREADY : OUT STD_LOGIC;
    macIpEncode_rsp_V_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    macIpEncode_rsp_V_TVALID : OUT STD_LOGIC;
    arp_scan_i : IN STD_LOGIC_VECTOR (0 downto 0);
    arp_scan_o : OUT STD_LOGIC_VECTOR (0 downto 0);
    arp_scan_o_ap_vld : OUT STD_LOGIC;
    myIpAddress : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of arp_server_genARPDiscovery is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_59682F00 : STD_LOGIC_VECTOR (31 downto 0) := "01011001011010000010111100000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal gia_fsm_state_load_load_fu_182_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_i_nbreadreq_fu_86_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op25_read_state1 : BOOLEAN;
    signal grp_nbreadreq_fu_100_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op30_read_state1 : BOOLEAN;
    signal ap_predicate_op41_read_state1 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal gia_fsm_state_load_reg_307 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_i_reg_316 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op63_write_state2 : BOOLEAN;
    signal tmp_4_i_reg_325 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op64_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal gia_fsm_state_load_reg_307_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_i_reg_325_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op67_write_state3 : BOOLEAN;
    signal regslice_both_macIpEncode_rsp_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal gia_fsm_state : STD_LOGIC_VECTOR (2 downto 0) := "011";
    signal ip_lsb_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal time_counter : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal arp_scan_1d_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal macIpEncode_req_V_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal macIpEncode_rsp_V_TDATA_blk_n : STD_LOGIC;
    signal macIpEncode_i_blk_n : STD_LOGIC;
    signal macIpEncode_rsp_i_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal v1_V_reg_311 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_320 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_329 : STD_LOGIC_VECTOR (127 downto 0);
    signal trunc_ln674_fu_244_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln674_reg_340 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_checkArpScan_V_phi_fu_145_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_checkArpScan_V_reg_142 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_arp_scan_loc_1_i_phi_fu_156_p16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_arp_scan_loc_1_i_reg_153 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln323_fu_212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln305_fu_230_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1049_fu_270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln870_fu_248_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln870_1_fu_282_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_s_fu_300_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln323_fu_206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_1_fu_224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_macIpEncode_req_V_U_apdone_blk : STD_LOGIC;
    signal macIpEncode_req_V_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal macIpEncode_req_V_TVALID_int_regslice : STD_LOGIC;
    signal macIpEncode_req_V_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_macIpEncode_req_V_U_ack_in : STD_LOGIC;
    signal macIpEncode_rsp_V_TVALID_int_regslice : STD_LOGIC;
    signal macIpEncode_rsp_V_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_macIpEncode_rsp_V_U_vld_out : STD_LOGIC;
    signal ap_condition_183 : BOOLEAN;
    signal ap_condition_286 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component arp_server_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_macIpEncode_req_V_U : component arp_server_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => macIpEncode_req_V_TDATA,
        vld_in => macIpEncode_req_V_TVALID,
        ack_in => regslice_both_macIpEncode_req_V_U_ack_in,
        data_out => macIpEncode_req_V_TDATA_int_regslice,
        vld_out => macIpEncode_req_V_TVALID_int_regslice,
        ack_out => macIpEncode_req_V_TREADY_int_regslice,
        apdone_blk => regslice_both_macIpEncode_req_V_U_apdone_blk);

    regslice_both_macIpEncode_rsp_V_U : component arp_server_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => tmp_1_reg_329,
        vld_in => macIpEncode_rsp_V_TVALID_int_regslice,
        ack_in => macIpEncode_rsp_V_TREADY_int_regslice,
        data_out => macIpEncode_rsp_V_TDATA,
        vld_out => regslice_both_macIpEncode_rsp_V_U_vld_out,
        ack_out => macIpEncode_rsp_V_TREADY,
        apdone_blk => regslice_both_macIpEncode_rsp_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    gia_fsm_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                gia_fsm_state <= ap_const_lv3_3;
            else
                if (((gia_fsm_state_load_load_fu_182_p1 = ap_const_lv3_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    gia_fsm_state <= ap_const_lv3_4;
                elsif (((grp_nbreadreq_fu_100_p3 = ap_const_lv1_1) and (gia_fsm_state = ap_const_lv3_4) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    gia_fsm_state <= select_ln305_fu_230_p3;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((gia_fsm_state = ap_const_lv3_3) and (or_ln323_fu_212_p2 = ap_const_lv1_0) and (ap_phi_mux_checkArpScan_V_phi_fu_145_p4 = ap_const_lv1_1)) or ((grp_nbreadreq_fu_100_p3 = ap_const_lv1_0) and (gia_fsm_state = ap_const_lv3_3) and (or_ln323_fu_212_p2 = ap_const_lv1_0))))) then 
                    gia_fsm_state <= ap_const_lv3_0;
                elsif ((((gia_fsm_state_load_load_fu_182_p1 = ap_const_lv3_1) and (icmp_ln1049_fu_270_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((gia_fsm_state_load_load_fu_182_p1 = ap_const_lv3_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                    gia_fsm_state <= ap_const_lv3_2;
                end if; 
            end if;
        end if;
    end process;


    ip_lsb_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_183)) then
                if ((gia_fsm_state_load_load_fu_182_p1 = ap_const_lv3_2)) then 
                    ip_lsb_V <= add_ln870_fu_248_p2;
                elsif ((gia_fsm_state_load_load_fu_182_p1 = ap_const_lv3_0)) then 
                    ip_lsb_V <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                arp_scan_1d_V <= ap_phi_mux_arp_scan_loc_1_i_phi_fu_156_p16;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                gia_fsm_state_load_reg_307 <= gia_fsm_state;
                gia_fsm_state_load_reg_307_pp0_iter1_reg <= gia_fsm_state_load_reg_307;
                tmp_4_i_reg_325_pp0_iter1_reg <= tmp_4_i_reg_325;
                v1_V_reg_311 <= ip_lsb_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gia_fsm_state_load_load_fu_182_p1 = ap_const_lv3_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                time_counter <= add_ln870_1_fu_282_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_op30_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_1_reg_329 <= macIpEncode_rsp_i_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gia_fsm_state = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_2_i_reg_316 <= tmp_2_i_nbreadreq_fu_86_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gia_fsm_state = ap_const_lv3_3) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_4_i_reg_325 <= grp_nbreadreq_fu_100_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_op25_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_reg_320 <= macIpEncode_req_V_TDATA_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gia_fsm_state_load_load_fu_182_p1 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                trunc_ln674_reg_340 <= trunc_ln674_fu_244_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln870_1_fu_282_p2 <= std_logic_vector(unsigned(time_counter) + unsigned(ap_const_lv32_1));
    add_ln870_fu_248_p2 <= std_logic_vector(unsigned(ip_lsb_V) + unsigned(ap_const_lv8_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op25_read_state1, macIpEncode_rsp_i_empty_n, ap_predicate_op30_read_state1, ap_predicate_op41_read_state1, ap_done_reg, macIpEncode_i_full_n, gia_fsm_state_load_reg_307, ap_predicate_op63_write_state2, ap_predicate_op64_write_state2, ap_predicate_op67_write_state3, regslice_both_macIpEncode_rsp_V_U_apdone_blk, macIpEncode_req_V_TVALID_int_regslice, macIpEncode_rsp_V_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op41_read_state1 = ap_const_boolean_1) and (macIpEncode_rsp_i_empty_n = ap_const_logic_0)) or ((ap_predicate_op30_read_state1 = ap_const_boolean_1) and (macIpEncode_rsp_i_empty_n = ap_const_logic_0)) or ((ap_predicate_op25_read_state1 = ap_const_boolean_1) and (macIpEncode_req_V_TVALID_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((regslice_both_macIpEncode_rsp_V_U_apdone_blk = ap_const_logic_1) or ((macIpEncode_rsp_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op67_write_state3 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((gia_fsm_state_load_reg_307 = ap_const_lv3_2) and (macIpEncode_i_full_n = ap_const_logic_0)) or ((ap_predicate_op64_write_state2 = ap_const_boolean_1) and (macIpEncode_rsp_V_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op63_write_state2 = ap_const_boolean_1) and (macIpEncode_i_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op25_read_state1, macIpEncode_rsp_i_empty_n, ap_predicate_op30_read_state1, ap_predicate_op41_read_state1, ap_done_reg, macIpEncode_i_full_n, gia_fsm_state_load_reg_307, ap_predicate_op63_write_state2, ap_predicate_op64_write_state2, ap_block_state2_io, ap_predicate_op67_write_state3, regslice_both_macIpEncode_rsp_V_U_apdone_blk, ap_block_state3_io, macIpEncode_req_V_TVALID_int_regslice, macIpEncode_rsp_V_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op41_read_state1 = ap_const_boolean_1) and (macIpEncode_rsp_i_empty_n = ap_const_logic_0)) or ((ap_predicate_op30_read_state1 = ap_const_boolean_1) and (macIpEncode_rsp_i_empty_n = ap_const_logic_0)) or ((ap_predicate_op25_read_state1 = ap_const_boolean_1) and (macIpEncode_req_V_TVALID_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_macIpEncode_rsp_V_U_apdone_blk = ap_const_logic_1) or ((macIpEncode_rsp_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op67_write_state3 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state2_io) or ((gia_fsm_state_load_reg_307 = ap_const_lv3_2) and (macIpEncode_i_full_n = ap_const_logic_0)) or ((ap_predicate_op64_write_state2 = ap_const_boolean_1) and (macIpEncode_rsp_V_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op63_write_state2 = ap_const_boolean_1) and (macIpEncode_i_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op25_read_state1, macIpEncode_rsp_i_empty_n, ap_predicate_op30_read_state1, ap_predicate_op41_read_state1, ap_done_reg, macIpEncode_i_full_n, gia_fsm_state_load_reg_307, ap_predicate_op63_write_state2, ap_predicate_op64_write_state2, ap_block_state2_io, ap_predicate_op67_write_state3, regslice_both_macIpEncode_rsp_V_U_apdone_blk, ap_block_state3_io, macIpEncode_req_V_TVALID_int_regslice, macIpEncode_rsp_V_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op41_read_state1 = ap_const_boolean_1) and (macIpEncode_rsp_i_empty_n = ap_const_logic_0)) or ((ap_predicate_op30_read_state1 = ap_const_boolean_1) and (macIpEncode_rsp_i_empty_n = ap_const_logic_0)) or ((ap_predicate_op25_read_state1 = ap_const_boolean_1) and (macIpEncode_req_V_TVALID_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_macIpEncode_rsp_V_U_apdone_blk = ap_const_logic_1) or ((macIpEncode_rsp_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op67_write_state3 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state2_io) or ((gia_fsm_state_load_reg_307 = ap_const_lv3_2) and (macIpEncode_i_full_n = ap_const_logic_0)) or ((ap_predicate_op64_write_state2 = ap_const_boolean_1) and (macIpEncode_rsp_V_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op63_write_state2 = ap_const_boolean_1) and (macIpEncode_i_full_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_predicate_op25_read_state1, macIpEncode_rsp_i_empty_n, ap_predicate_op30_read_state1, ap_predicate_op41_read_state1, ap_done_reg, macIpEncode_req_V_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op41_read_state1 = ap_const_boolean_1) and (macIpEncode_rsp_i_empty_n = ap_const_logic_0)) or ((ap_predicate_op30_read_state1 = ap_const_boolean_1) and (macIpEncode_rsp_i_empty_n = ap_const_logic_0)) or ((ap_predicate_op25_read_state1 = ap_const_boolean_1) and (macIpEncode_req_V_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state2_io_assign_proc : process(ap_predicate_op64_write_state2, macIpEncode_rsp_V_TREADY_int_regslice)
    begin
                ap_block_state2_io <= ((ap_predicate_op64_write_state2 = ap_const_boolean_1) and (macIpEncode_rsp_V_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(macIpEncode_i_full_n, gia_fsm_state_load_reg_307, ap_predicate_op63_write_state2, ap_predicate_op64_write_state2, macIpEncode_rsp_V_TREADY_int_regslice)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((gia_fsm_state_load_reg_307 = ap_const_lv3_2) and (macIpEncode_i_full_n = ap_const_logic_0)) or ((ap_predicate_op64_write_state2 = ap_const_boolean_1) and (macIpEncode_rsp_V_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op63_write_state2 = ap_const_boolean_1) and (macIpEncode_i_full_n = ap_const_logic_0)));
    end process;


    ap_block_state3_io_assign_proc : process(ap_predicate_op67_write_state3, macIpEncode_rsp_V_TREADY_int_regslice)
    begin
                ap_block_state3_io <= ((macIpEncode_rsp_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op67_write_state3 = ap_const_boolean_1));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(ap_predicate_op67_write_state3, regslice_both_macIpEncode_rsp_V_U_apdone_blk, macIpEncode_rsp_V_TREADY_int_regslice)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((regslice_both_macIpEncode_rsp_V_U_apdone_blk = ap_const_logic_1) or ((macIpEncode_rsp_V_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op67_write_state3 = ap_const_boolean_1)));
    end process;


    ap_condition_183_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_183 <= ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_286_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001)
    begin
                ap_condition_286 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter2, ap_done_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_arp_scan_loc_1_i_phi_fu_156_p16_assign_proc : process(gia_fsm_state_load_load_fu_182_p1, grp_nbreadreq_fu_100_p3, arp_scan_i, gia_fsm_state, ap_phi_mux_checkArpScan_V_phi_fu_145_p4, ap_phi_reg_pp0_iter0_arp_scan_loc_1_i_reg_153, or_ln323_fu_212_p2)
    begin
        if ((((gia_fsm_state = ap_const_lv3_3) and (or_ln323_fu_212_p2 = ap_const_lv1_0) and (ap_phi_mux_checkArpScan_V_phi_fu_145_p4 = ap_const_lv1_1)) or ((grp_nbreadreq_fu_100_p3 = ap_const_lv1_0) and (gia_fsm_state = ap_const_lv3_3) and (or_ln323_fu_212_p2 = ap_const_lv1_0)))) then 
            ap_phi_mux_arp_scan_loc_1_i_phi_fu_156_p16 <= ap_const_lv1_0;
        elsif (((gia_fsm_state_load_load_fu_182_p1 = ap_const_lv3_2) or (gia_fsm_state = ap_const_lv3_4) or (gia_fsm_state_load_load_fu_182_p1 = ap_const_lv3_1) or (gia_fsm_state_load_load_fu_182_p1 = ap_const_lv3_0) or (gia_fsm_state_load_load_fu_182_p1 = ap_const_lv3_5) or (gia_fsm_state_load_load_fu_182_p1 = ap_const_lv3_6) or (gia_fsm_state_load_load_fu_182_p1 = ap_const_lv3_7) or ((grp_nbreadreq_fu_100_p3 = ap_const_lv1_1) and (gia_fsm_state = ap_const_lv3_3) and (ap_phi_mux_checkArpScan_V_phi_fu_145_p4 = ap_const_lv1_0)) or ((gia_fsm_state = ap_const_lv3_3) and (or_ln323_fu_212_p2 = ap_const_lv1_1) and (ap_phi_mux_checkArpScan_V_phi_fu_145_p4 = ap_const_lv1_1)) or ((grp_nbreadreq_fu_100_p3 = ap_const_lv1_0) and (gia_fsm_state = ap_const_lv3_3) and (or_ln323_fu_212_p2 = ap_const_lv1_1)))) then 
            ap_phi_mux_arp_scan_loc_1_i_phi_fu_156_p16 <= arp_scan_i;
        else 
            ap_phi_mux_arp_scan_loc_1_i_phi_fu_156_p16 <= ap_phi_reg_pp0_iter0_arp_scan_loc_1_i_reg_153;
        end if; 
    end process;


    ap_phi_mux_checkArpScan_V_phi_fu_145_p4_assign_proc : process(tmp_2_i_nbreadreq_fu_86_p3, gia_fsm_state, ap_phi_reg_pp0_iter0_checkArpScan_V_reg_142)
    begin
        if ((gia_fsm_state = ap_const_lv3_3)) then
            if ((tmp_2_i_nbreadreq_fu_86_p3 = ap_const_lv1_0)) then 
                ap_phi_mux_checkArpScan_V_phi_fu_145_p4 <= ap_const_lv1_1;
            elsif ((tmp_2_i_nbreadreq_fu_86_p3 = ap_const_lv1_1)) then 
                ap_phi_mux_checkArpScan_V_phi_fu_145_p4 <= ap_const_lv1_0;
            else 
                ap_phi_mux_checkArpScan_V_phi_fu_145_p4 <= ap_phi_reg_pp0_iter0_checkArpScan_V_reg_142;
            end if;
        else 
            ap_phi_mux_checkArpScan_V_phi_fu_145_p4 <= ap_phi_reg_pp0_iter0_checkArpScan_V_reg_142;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_arp_scan_loc_1_i_reg_153 <= "X";
    ap_phi_reg_pp0_iter0_checkArpScan_V_reg_142 <= "X";

    ap_predicate_op25_read_state1_assign_proc : process(tmp_2_i_nbreadreq_fu_86_p3, gia_fsm_state)
    begin
                ap_predicate_op25_read_state1 <= ((tmp_2_i_nbreadreq_fu_86_p3 = ap_const_lv1_1) and (gia_fsm_state = ap_const_lv3_3));
    end process;


    ap_predicate_op30_read_state1_assign_proc : process(grp_nbreadreq_fu_100_p3, gia_fsm_state)
    begin
                ap_predicate_op30_read_state1 <= ((grp_nbreadreq_fu_100_p3 = ap_const_lv1_1) and (gia_fsm_state = ap_const_lv3_3));
    end process;


    ap_predicate_op41_read_state1_assign_proc : process(grp_nbreadreq_fu_100_p3, gia_fsm_state)
    begin
                ap_predicate_op41_read_state1 <= ((grp_nbreadreq_fu_100_p3 = ap_const_lv1_1) and (gia_fsm_state = ap_const_lv3_4));
    end process;


    ap_predicate_op63_write_state2_assign_proc : process(gia_fsm_state_load_reg_307, tmp_2_i_reg_316)
    begin
                ap_predicate_op63_write_state2 <= ((tmp_2_i_reg_316 = ap_const_lv1_1) and (gia_fsm_state_load_reg_307 = ap_const_lv3_3));
    end process;


    ap_predicate_op64_write_state2_assign_proc : process(gia_fsm_state_load_reg_307, tmp_4_i_reg_325)
    begin
                ap_predicate_op64_write_state2 <= ((tmp_4_i_reg_325 = ap_const_lv1_1) and (gia_fsm_state_load_reg_307 = ap_const_lv3_3));
    end process;


    ap_predicate_op67_write_state3_assign_proc : process(gia_fsm_state_load_reg_307_pp0_iter1_reg, tmp_4_i_reg_325_pp0_iter1_reg)
    begin
                ap_predicate_op67_write_state3 <= ((tmp_4_i_reg_325_pp0_iter1_reg = ap_const_lv1_1) and (gia_fsm_state_load_reg_307_pp0_iter1_reg = ap_const_lv3_3));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    arp_scan_o <= ap_const_lv1_0;

    arp_scan_o_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, grp_nbreadreq_fu_100_p3, gia_fsm_state, ap_block_pp0_stage0_11001, ap_phi_mux_checkArpScan_V_phi_fu_145_p4, or_ln323_fu_212_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((gia_fsm_state = ap_const_lv3_3) and (or_ln323_fu_212_p2 = ap_const_lv1_0) and (ap_phi_mux_checkArpScan_V_phi_fu_145_p4 = ap_const_lv1_1)) or ((grp_nbreadreq_fu_100_p3 = ap_const_lv1_0) and (gia_fsm_state = ap_const_lv3_3) and (or_ln323_fu_212_p2 = ap_const_lv1_0))))) then 
            arp_scan_o_ap_vld <= ap_const_logic_1;
        else 
            arp_scan_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    gia_fsm_state_load_load_fu_182_p1 <= gia_fsm_state;
    grp_nbreadreq_fu_100_p3 <= (0=>(macIpEncode_rsp_i_empty_n), others=>'-');
    icmp_ln1049_1_fu_224_p2 <= "1" when (ip_lsb_V = ap_const_lv8_0) else "0";
    icmp_ln1049_fu_270_p2 <= "1" when (time_counter = ap_const_lv32_59682F00) else "0";

    macIpEncode_i_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, macIpEncode_i_full_n, gia_fsm_state_load_reg_307, ap_predicate_op63_write_state2, ap_block_pp0_stage0)
    begin
        if ((((gia_fsm_state_load_reg_307 = ap_const_lv3_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_predicate_op63_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            macIpEncode_i_blk_n <= macIpEncode_i_full_n;
        else 
            macIpEncode_i_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    macIpEncode_i_din_assign_proc : process(gia_fsm_state_load_reg_307, ap_predicate_op63_write_state2, tmp_reg_320, p_s_fu_300_p3, ap_condition_286)
    begin
        if ((ap_const_boolean_1 = ap_condition_286)) then
            if ((gia_fsm_state_load_reg_307 = ap_const_lv3_2)) then 
                macIpEncode_i_din <= p_s_fu_300_p3;
            elsif ((ap_predicate_op63_write_state2 = ap_const_boolean_1)) then 
                macIpEncode_i_din <= tmp_reg_320;
            else 
                macIpEncode_i_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            macIpEncode_i_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    macIpEncode_i_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, gia_fsm_state_load_reg_307, ap_predicate_op63_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((gia_fsm_state_load_reg_307 = ap_const_lv3_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op63_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            macIpEncode_i_write <= ap_const_logic_1;
        else 
            macIpEncode_i_write <= ap_const_logic_0;
        end if; 
    end process;


    macIpEncode_req_V_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op25_read_state1, ap_done_reg, ap_block_pp0_stage0, macIpEncode_req_V_TVALID_int_regslice)
    begin
        if (((ap_done_reg = ap_const_logic_0) and (ap_predicate_op25_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            macIpEncode_req_V_TDATA_blk_n <= macIpEncode_req_V_TVALID_int_regslice;
        else 
            macIpEncode_req_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    macIpEncode_req_V_TREADY <= regslice_both_macIpEncode_req_V_U_ack_in;

    macIpEncode_req_V_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op25_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op25_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            macIpEncode_req_V_TREADY_int_regslice <= ap_const_logic_1;
        else 
            macIpEncode_req_V_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    macIpEncode_rsp_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op64_write_state2, ap_predicate_op67_write_state3, ap_block_pp0_stage0, macIpEncode_rsp_V_TREADY_int_regslice)
    begin
        if ((((ap_predicate_op64_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op67_write_state3 = ap_const_boolean_1)))) then 
            macIpEncode_rsp_V_TDATA_blk_n <= macIpEncode_rsp_V_TREADY_int_regslice;
        else 
            macIpEncode_rsp_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    macIpEncode_rsp_V_TVALID <= regslice_both_macIpEncode_rsp_V_U_vld_out;

    macIpEncode_rsp_V_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op64_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op64_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            macIpEncode_rsp_V_TVALID_int_regslice <= ap_const_logic_1;
        else 
            macIpEncode_rsp_V_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    macIpEncode_rsp_i_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, macIpEncode_rsp_i_empty_n, ap_predicate_op30_read_state1, ap_predicate_op41_read_state1, ap_done_reg, ap_block_pp0_stage0)
    begin
        if ((((ap_done_reg = ap_const_logic_0) and (ap_predicate_op41_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_done_reg = ap_const_logic_0) and (ap_predicate_op30_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            macIpEncode_rsp_i_blk_n <= macIpEncode_rsp_i_empty_n;
        else 
            macIpEncode_rsp_i_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    macIpEncode_rsp_i_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op30_read_state1, ap_predicate_op41_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op41_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op30_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            macIpEncode_rsp_i_read <= ap_const_logic_1;
        else 
            macIpEncode_rsp_i_read <= ap_const_logic_0;
        end if; 
    end process;

    or_ln323_fu_212_p2 <= (xor_ln323_fu_206_p2 or arp_scan_1d_V);
    p_s_fu_300_p3 <= (v1_V_reg_311 & trunc_ln674_reg_340);
    select_ln305_fu_230_p3 <= 
        ap_const_lv3_3 when (icmp_ln1049_1_fu_224_p2(0) = '1') else 
        ap_const_lv3_2;
    tmp_2_i_nbreadreq_fu_86_p3 <= (0=>(macIpEncode_req_V_TVALID_int_regslice), others=>'-');
    trunc_ln674_fu_244_p1 <= myIpAddress(24 - 1 downto 0);
    xor_ln323_fu_206_p2 <= (arp_scan_i xor ap_const_lv1_1);
end behav;
