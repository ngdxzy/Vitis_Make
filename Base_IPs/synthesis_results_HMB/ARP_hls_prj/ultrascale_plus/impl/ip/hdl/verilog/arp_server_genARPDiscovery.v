// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module arp_server_genARPDiscovery (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        macIpEncode_req_V_TVALID,
        macIpEncode_rsp_i_dout,
        macIpEncode_rsp_i_empty_n,
        macIpEncode_rsp_i_read,
        macIpEncode_i_din,
        macIpEncode_i_full_n,
        macIpEncode_i_write,
        macIpEncode_rsp_V_TREADY,
        macIpEncode_req_V_TDATA,
        macIpEncode_req_V_TREADY,
        macIpEncode_rsp_V_TDATA,
        macIpEncode_rsp_V_TVALID,
        arp_scan_i,
        arp_scan_o,
        arp_scan_o_ap_vld,
        myIpAddress
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input   macIpEncode_req_V_TVALID;
input  [127:0] macIpEncode_rsp_i_dout;
input   macIpEncode_rsp_i_empty_n;
output   macIpEncode_rsp_i_read;
output  [31:0] macIpEncode_i_din;
input   macIpEncode_i_full_n;
output   macIpEncode_i_write;
input   macIpEncode_rsp_V_TREADY;
input  [31:0] macIpEncode_req_V_TDATA;
output   macIpEncode_req_V_TREADY;
output  [127:0] macIpEncode_rsp_V_TDATA;
output   macIpEncode_rsp_V_TVALID;
input  [0:0] arp_scan_i;
output  [0:0] arp_scan_o;
output   arp_scan_o_ap_vld;
input  [31:0] myIpAddress;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg macIpEncode_rsp_i_read;
reg[31:0] macIpEncode_i_din;
reg macIpEncode_i_write;
reg arp_scan_o_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire   [2:0] gia_fsm_state_load_load_fu_182_p1;
wire   [0:0] tmp_2_i_nbreadreq_fu_86_p3;
reg    ap_predicate_op25_read_state1;
wire   [0:0] grp_nbreadreq_fu_100_p3;
reg    ap_predicate_op30_read_state1;
reg    ap_predicate_op41_read_state1;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [2:0] gia_fsm_state_load_reg_307;
reg   [0:0] tmp_2_i_reg_316;
reg    ap_predicate_op63_write_state2;
reg   [0:0] tmp_4_i_reg_325;
reg    ap_predicate_op64_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state2_io;
reg   [2:0] gia_fsm_state_load_reg_307_pp0_iter1_reg;
reg   [0:0] tmp_4_i_reg_325_pp0_iter1_reg;
reg    ap_predicate_op67_write_state3;
wire    regslice_both_macIpEncode_rsp_V_U_apdone_blk;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_subdone;
reg   [2:0] gia_fsm_state;
reg   [7:0] ip_lsb_V;
reg   [31:0] time_counter;
reg   [0:0] arp_scan_1d_V;
reg    macIpEncode_req_V_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    macIpEncode_rsp_V_TDATA_blk_n;
reg    macIpEncode_i_blk_n;
reg    macIpEncode_rsp_i_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] v1_V_reg_311;
reg   [31:0] tmp_reg_320;
reg   [127:0] tmp_1_reg_329;
wire   [23:0] trunc_ln674_fu_244_p1;
reg   [23:0] trunc_ln674_reg_340;
reg   [0:0] ap_phi_mux_checkArpScan_V_phi_fu_145_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_checkArpScan_V_reg_142;
reg   [0:0] ap_phi_mux_arp_scan_loc_1_i_phi_fu_156_p16;
wire   [0:0] ap_phi_reg_pp0_iter0_arp_scan_loc_1_i_reg_153;
wire   [0:0] or_ln323_fu_212_p2;
wire   [2:0] select_ln305_fu_230_p3;
wire   [0:0] icmp_ln1049_fu_270_p2;
wire   [7:0] add_ln870_fu_248_p2;
wire   [31:0] add_ln870_1_fu_282_p2;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] p_s_fu_300_p3;
wire   [0:0] xor_ln323_fu_206_p2;
wire   [0:0] icmp_ln1049_1_fu_224_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_macIpEncode_req_V_U_apdone_blk;
wire   [31:0] macIpEncode_req_V_TDATA_int_regslice;
wire    macIpEncode_req_V_TVALID_int_regslice;
reg    macIpEncode_req_V_TREADY_int_regslice;
wire    regslice_both_macIpEncode_req_V_U_ack_in;
reg    macIpEncode_rsp_V_TVALID_int_regslice;
wire    macIpEncode_rsp_V_TREADY_int_regslice;
wire    regslice_both_macIpEncode_rsp_V_U_vld_out;
reg    ap_condition_183;
reg    ap_condition_286;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 gia_fsm_state = 3'd3;
#0 ip_lsb_V = 8'd0;
#0 time_counter = 32'd0;
#0 arp_scan_1d_V = 1'd0;
end

arp_server_regslice_both #(
    .DataWidth( 32 ))
regslice_both_macIpEncode_req_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(macIpEncode_req_V_TDATA),
    .vld_in(macIpEncode_req_V_TVALID),
    .ack_in(regslice_both_macIpEncode_req_V_U_ack_in),
    .data_out(macIpEncode_req_V_TDATA_int_regslice),
    .vld_out(macIpEncode_req_V_TVALID_int_regslice),
    .ack_out(macIpEncode_req_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_macIpEncode_req_V_U_apdone_blk)
);

arp_server_regslice_both #(
    .DataWidth( 128 ))
regslice_both_macIpEncode_rsp_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_1_reg_329),
    .vld_in(macIpEncode_rsp_V_TVALID_int_regslice),
    .ack_in(macIpEncode_rsp_V_TREADY_int_regslice),
    .data_out(macIpEncode_rsp_V_TDATA),
    .vld_out(regslice_both_macIpEncode_rsp_V_U_vld_out),
    .ack_out(macIpEncode_rsp_V_TREADY),
    .apdone_blk(regslice_both_macIpEncode_rsp_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        gia_fsm_state <= 3'd3;
    end else begin
        if (((gia_fsm_state_load_load_fu_182_p1 == 3'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            gia_fsm_state <= 3'd4;
        end else if (((grp_nbreadreq_fu_100_p3 == 1'd1) & (gia_fsm_state == 3'd4) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            gia_fsm_state <= select_ln305_fu_230_p3;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (((gia_fsm_state == 3'd3) & (or_ln323_fu_212_p2 == 1'd0) & (ap_phi_mux_checkArpScan_V_phi_fu_145_p4 == 1'd1)) | ((grp_nbreadreq_fu_100_p3 == 1'd0) & (gia_fsm_state == 3'd3) & (or_ln323_fu_212_p2 == 1'd0))))) begin
            gia_fsm_state <= 3'd0;
        end else if ((((gia_fsm_state_load_load_fu_182_p1 == 3'd1) & (icmp_ln1049_fu_270_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((gia_fsm_state_load_load_fu_182_p1 == 3'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
            gia_fsm_state <= 3'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_183)) begin
        if ((gia_fsm_state_load_load_fu_182_p1 == 3'd2)) begin
            ip_lsb_V <= add_ln870_fu_248_p2;
        end else if ((gia_fsm_state_load_load_fu_182_p1 == 3'd0)) begin
            ip_lsb_V <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        arp_scan_1d_V <= ap_phi_mux_arp_scan_loc_1_i_phi_fu_156_p16;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gia_fsm_state_load_reg_307 <= gia_fsm_state;
        gia_fsm_state_load_reg_307_pp0_iter1_reg <= gia_fsm_state_load_reg_307;
        tmp_4_i_reg_325_pp0_iter1_reg <= tmp_4_i_reg_325;
        v1_V_reg_311 <= ip_lsb_V;
    end
end

always @ (posedge ap_clk) begin
    if (((gia_fsm_state_load_load_fu_182_p1 == 3'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        time_counter <= add_ln870_1_fu_282_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op30_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_1_reg_329 <= macIpEncode_rsp_i_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((gia_fsm_state == 3'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_2_i_reg_316 <= tmp_2_i_nbreadreq_fu_86_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((gia_fsm_state == 3'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_4_i_reg_325 <= grp_nbreadreq_fu_100_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op25_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_320 <= macIpEncode_req_V_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((gia_fsm_state_load_load_fu_182_p1 == 3'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln674_reg_340 <= trunc_ln674_fu_244_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if ((((gia_fsm_state == 3'd3) & (or_ln323_fu_212_p2 == 1'd0) & (ap_phi_mux_checkArpScan_V_phi_fu_145_p4 == 1'd1)) | ((grp_nbreadreq_fu_100_p3 == 1'd0) & (gia_fsm_state == 3'd3) & (or_ln323_fu_212_p2 == 1'd0)))) begin
        ap_phi_mux_arp_scan_loc_1_i_phi_fu_156_p16 = 1'd0;
    end else if (((gia_fsm_state_load_load_fu_182_p1 == 3'd2) | (gia_fsm_state == 3'd4) | (gia_fsm_state_load_load_fu_182_p1 == 3'd1) | (gia_fsm_state_load_load_fu_182_p1 == 3'd0) | (gia_fsm_state_load_load_fu_182_p1 == 3'd5) | (gia_fsm_state_load_load_fu_182_p1 == 3'd6) | (gia_fsm_state_load_load_fu_182_p1 == 3'd7) | ((grp_nbreadreq_fu_100_p3 == 1'd1) & (gia_fsm_state == 3'd3) & (ap_phi_mux_checkArpScan_V_phi_fu_145_p4 == 1'd0)) | ((gia_fsm_state == 3'd3) & (or_ln323_fu_212_p2 == 1'd1) & (ap_phi_mux_checkArpScan_V_phi_fu_145_p4 == 1'd1)) | ((grp_nbreadreq_fu_100_p3 == 1'd0) & (gia_fsm_state == 3'd3) & (or_ln323_fu_212_p2 == 1'd1)))) begin
        ap_phi_mux_arp_scan_loc_1_i_phi_fu_156_p16 = arp_scan_i;
    end else begin
        ap_phi_mux_arp_scan_loc_1_i_phi_fu_156_p16 = ap_phi_reg_pp0_iter0_arp_scan_loc_1_i_reg_153;
    end
end

always @ (*) begin
    if ((gia_fsm_state == 3'd3)) begin
        if ((tmp_2_i_nbreadreq_fu_86_p3 == 1'd0)) begin
            ap_phi_mux_checkArpScan_V_phi_fu_145_p4 = 1'd1;
        end else if ((tmp_2_i_nbreadreq_fu_86_p3 == 1'd1)) begin
            ap_phi_mux_checkArpScan_V_phi_fu_145_p4 = 1'd0;
        end else begin
            ap_phi_mux_checkArpScan_V_phi_fu_145_p4 = ap_phi_reg_pp0_iter0_checkArpScan_V_reg_142;
        end
    end else begin
        ap_phi_mux_checkArpScan_V_phi_fu_145_p4 = ap_phi_reg_pp0_iter0_checkArpScan_V_reg_142;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (((gia_fsm_state == 3'd3) & (or_ln323_fu_212_p2 == 1'd0) & (ap_phi_mux_checkArpScan_V_phi_fu_145_p4 == 1'd1)) | ((grp_nbreadreq_fu_100_p3 == 1'd0) & (gia_fsm_state == 3'd3) & (or_ln323_fu_212_p2 == 1'd0))))) begin
        arp_scan_o_ap_vld = 1'b1;
    end else begin
        arp_scan_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((gia_fsm_state_load_reg_307 == 3'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_predicate_op63_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        macIpEncode_i_blk_n = macIpEncode_i_full_n;
    end else begin
        macIpEncode_i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_286)) begin
        if ((gia_fsm_state_load_reg_307 == 3'd2)) begin
            macIpEncode_i_din = p_s_fu_300_p3;
        end else if ((ap_predicate_op63_write_state2 == 1'b1)) begin
            macIpEncode_i_din = tmp_reg_320;
        end else begin
            macIpEncode_i_din = 'bx;
        end
    end else begin
        macIpEncode_i_din = 'bx;
    end
end

always @ (*) begin
    if ((((gia_fsm_state_load_reg_307 == 3'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op63_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macIpEncode_i_write = 1'b1;
    end else begin
        macIpEncode_i_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b0) & (ap_predicate_op25_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        macIpEncode_req_V_TDATA_blk_n = macIpEncode_req_V_TVALID_int_regslice;
    end else begin
        macIpEncode_req_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op25_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macIpEncode_req_V_TREADY_int_regslice = 1'b1;
    end else begin
        macIpEncode_req_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op64_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op67_write_state3 == 1'b1)))) begin
        macIpEncode_rsp_V_TDATA_blk_n = macIpEncode_rsp_V_TREADY_int_regslice;
    end else begin
        macIpEncode_rsp_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op64_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        macIpEncode_rsp_V_TVALID_int_regslice = 1'b1;
    end else begin
        macIpEncode_rsp_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_done_reg == 1'b0) & (ap_predicate_op41_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_done_reg == 1'b0) & (ap_predicate_op30_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        macIpEncode_rsp_i_blk_n = macIpEncode_rsp_i_empty_n;
    end else begin
        macIpEncode_rsp_i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op41_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op30_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        macIpEncode_rsp_i_read = 1'b1;
    end else begin
        macIpEncode_rsp_i_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln870_1_fu_282_p2 = (time_counter + 32'd1);

assign add_ln870_fu_248_p2 = (ip_lsb_V + 8'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op41_read_state1 == 1'b1) & (macIpEncode_rsp_i_empty_n == 1'b0)) | ((ap_predicate_op30_read_state1 == 1'b1) & (macIpEncode_rsp_i_empty_n == 1'b0)) | ((ap_predicate_op25_read_state1 == 1'b1) & (macIpEncode_req_V_TVALID_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_macIpEncode_rsp_V_U_apdone_blk == 1'b1) | ((macIpEncode_rsp_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op67_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((gia_fsm_state_load_reg_307 == 3'd2) & (macIpEncode_i_full_n == 1'b0)) | ((ap_predicate_op64_write_state2 == 1'b1) & (macIpEncode_rsp_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op63_write_state2 == 1'b1) & (macIpEncode_i_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op41_read_state1 == 1'b1) & (macIpEncode_rsp_i_empty_n == 1'b0)) | ((ap_predicate_op30_read_state1 == 1'b1) & (macIpEncode_rsp_i_empty_n == 1'b0)) | ((ap_predicate_op25_read_state1 == 1'b1) & (macIpEncode_req_V_TVALID_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | (regslice_both_macIpEncode_rsp_V_U_apdone_blk == 1'b1) | ((macIpEncode_rsp_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op67_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((gia_fsm_state_load_reg_307 == 3'd2) & (macIpEncode_i_full_n == 1'b0)) | ((ap_predicate_op64_write_state2 == 1'b1) & (macIpEncode_rsp_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op63_write_state2 == 1'b1) & (macIpEncode_i_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op41_read_state1 == 1'b1) & (macIpEncode_rsp_i_empty_n == 1'b0)) | ((ap_predicate_op30_read_state1 == 1'b1) & (macIpEncode_rsp_i_empty_n == 1'b0)) | ((ap_predicate_op25_read_state1 == 1'b1) & (macIpEncode_req_V_TVALID_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | (regslice_both_macIpEncode_rsp_V_U_apdone_blk == 1'b1) | ((macIpEncode_rsp_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op67_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((gia_fsm_state_load_reg_307 == 3'd2) & (macIpEncode_i_full_n == 1'b0)) | ((ap_predicate_op64_write_state2 == 1'b1) & (macIpEncode_rsp_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op63_write_state2 == 1'b1) & (macIpEncode_i_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_done_reg == 1'b1) | ((ap_predicate_op41_read_state1 == 1'b1) & (macIpEncode_rsp_i_empty_n == 1'b0)) | ((ap_predicate_op30_read_state1 == 1'b1) & (macIpEncode_rsp_i_empty_n == 1'b0)) | ((ap_predicate_op25_read_state1 == 1'b1) & (macIpEncode_req_V_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state2_io = ((ap_predicate_op64_write_state2 == 1'b1) & (macIpEncode_rsp_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((gia_fsm_state_load_reg_307 == 3'd2) & (macIpEncode_i_full_n == 1'b0)) | ((ap_predicate_op64_write_state2 == 1'b1) & (macIpEncode_rsp_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op63_write_state2 == 1'b1) & (macIpEncode_i_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state3_io = ((macIpEncode_rsp_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op67_write_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((regslice_both_macIpEncode_rsp_V_U_apdone_blk == 1'b1) | ((macIpEncode_rsp_V_TREADY_int_regslice == 1'b0) & (ap_predicate_op67_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_condition_183 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_286 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_arp_scan_loc_1_i_reg_153 = 'bx;

assign ap_phi_reg_pp0_iter0_checkArpScan_V_reg_142 = 'bx;

always @ (*) begin
    ap_predicate_op25_read_state1 = ((tmp_2_i_nbreadreq_fu_86_p3 == 1'd1) & (gia_fsm_state == 3'd3));
end

always @ (*) begin
    ap_predicate_op30_read_state1 = ((grp_nbreadreq_fu_100_p3 == 1'd1) & (gia_fsm_state == 3'd3));
end

always @ (*) begin
    ap_predicate_op41_read_state1 = ((grp_nbreadreq_fu_100_p3 == 1'd1) & (gia_fsm_state == 3'd4));
end

always @ (*) begin
    ap_predicate_op63_write_state2 = ((tmp_2_i_reg_316 == 1'd1) & (gia_fsm_state_load_reg_307 == 3'd3));
end

always @ (*) begin
    ap_predicate_op64_write_state2 = ((tmp_4_i_reg_325 == 1'd1) & (gia_fsm_state_load_reg_307 == 3'd3));
end

always @ (*) begin
    ap_predicate_op67_write_state3 = ((tmp_4_i_reg_325_pp0_iter1_reg == 1'd1) & (gia_fsm_state_load_reg_307_pp0_iter1_reg == 3'd3));
end

assign arp_scan_o = 1'd0;

assign gia_fsm_state_load_load_fu_182_p1 = gia_fsm_state;

assign grp_nbreadreq_fu_100_p3 = macIpEncode_rsp_i_empty_n;

assign icmp_ln1049_1_fu_224_p2 = ((ip_lsb_V == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1049_fu_270_p2 = ((time_counter == 32'd1500000000) ? 1'b1 : 1'b0);

assign macIpEncode_req_V_TREADY = regslice_both_macIpEncode_req_V_U_ack_in;

assign macIpEncode_rsp_V_TVALID = regslice_both_macIpEncode_rsp_V_U_vld_out;

assign or_ln323_fu_212_p2 = (xor_ln323_fu_206_p2 | arp_scan_1d_V);

assign p_s_fu_300_p3 = {{v1_V_reg_311}, {trunc_ln674_reg_340}};

assign select_ln305_fu_230_p3 = ((icmp_ln1049_1_fu_224_p2[0:0] == 1'b1) ? 3'd3 : 3'd2);

assign tmp_2_i_nbreadreq_fu_86_p3 = macIpEncode_req_V_TVALID_int_regslice;

assign trunc_ln674_fu_244_p1 = myIpAddress[23:0];

assign xor_ln323_fu_206_p2 = (arp_scan_i ^ 1'd1);

endmodule //arp_server_genARPDiscovery
