// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module arp_server_arp_pkg_receiver (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        myIpAddress_c_din,
        myIpAddress_c_full_n,
        myIpAddress_c_write,
        arpDataIn_TVALID,
        arpTableInsertFifo_din,
        arpTableInsertFifo_full_n,
        arpTableInsertFifo_write,
        arpReplyFifo_din,
        arpReplyFifo_full_n,
        arpReplyFifo_write,
        arpDataIn_TDATA,
        arpDataIn_TREADY,
        arpDataIn_TKEEP,
        arpDataIn_TSTRB,
        arpDataIn_TLAST,
        myIpAddress
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [31:0] myIpAddress_c_din;
input   myIpAddress_c_full_n;
output   myIpAddress_c_write;
input   arpDataIn_TVALID;
output  [127:0] arpTableInsertFifo_din;
input   arpTableInsertFifo_full_n;
output   arpTableInsertFifo_write;
output  [255:0] arpReplyFifo_din;
input   arpReplyFifo_full_n;
output   arpReplyFifo_write;
input  [511:0] arpDataIn_TDATA;
output   arpDataIn_TREADY;
input  [63:0] arpDataIn_TKEEP;
input  [63:0] arpDataIn_TSTRB;
input  [0:0] arpDataIn_TLAST;
input  [31:0] myIpAddress;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg myIpAddress_c_write;
reg arpTableInsertFifo_write;
reg arpReplyFifo_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [0:0] tmp_nbreadreq_fu_118_p6;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] tmp_reg_300;
reg   [0:0] icmp_ln1049_reg_304;
reg   [15:0] opCode_V_reg_313;
reg   [0:0] icmp_ln1049_3_reg_323;
reg    ap_predicate_op44_write_state2;
reg   [0:0] icmp_ln1049_2_reg_327;
reg    ap_predicate_op48_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg   [3:0] wordCount_V;
reg    arpDataIn_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    myIpAddress_c_blk_n;
reg    arpReplyFifo_blk_n;
reg    arpTableInsertFifo_blk_n;
reg   [31:0] reg_172;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1049_fu_189_p2;
wire   [15:0] opCode_V_fu_205_p4;
wire   [0:0] grp_fu_158_p2;
reg   [47:0] meta_srcMac_V_reg_308;
reg   [47:0] meta_hwAddrSrc_V_reg_317;
reg   [63:0] tmp_17_i_reg_331;
wire   [3:0] select_ln80_fu_252_p3;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] protoAddrDst_V_fu_225_p4;
wire   [3:0] add_ln870_fu_246_p2;
wire   [96:0] or_ln_fu_266_p5;
wire   [223:0] tmp_18_i_fu_282_p7;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_arpDataIn_V_data_V_U_apdone_blk;
wire   [511:0] arpDataIn_TDATA_int_regslice;
wire    arpDataIn_TVALID_int_regslice;
reg    arpDataIn_TREADY_int_regslice;
wire    regslice_both_arpDataIn_V_data_V_U_ack_in;
wire    regslice_both_arpDataIn_V_keep_V_U_apdone_blk;
wire   [63:0] arpDataIn_TKEEP_int_regslice;
wire    regslice_both_arpDataIn_V_keep_V_U_vld_out;
wire    regslice_both_arpDataIn_V_keep_V_U_ack_in;
wire    regslice_both_arpDataIn_V_strb_V_U_apdone_blk;
wire   [63:0] arpDataIn_TSTRB_int_regslice;
wire    regslice_both_arpDataIn_V_strb_V_U_vld_out;
wire    regslice_both_arpDataIn_V_strb_V_U_ack_in;
wire    regslice_both_arpDataIn_V_last_V_U_apdone_blk;
wire   [0:0] arpDataIn_TLAST_int_regslice;
wire    regslice_both_arpDataIn_V_last_V_U_vld_out;
wire    regslice_both_arpDataIn_V_last_V_U_ack_in;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 wordCount_V = 4'd0;
end

arp_server_regslice_both #(
    .DataWidth( 512 ))
regslice_both_arpDataIn_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(arpDataIn_TDATA),
    .vld_in(arpDataIn_TVALID),
    .ack_in(regslice_both_arpDataIn_V_data_V_U_ack_in),
    .data_out(arpDataIn_TDATA_int_regslice),
    .vld_out(arpDataIn_TVALID_int_regslice),
    .ack_out(arpDataIn_TREADY_int_regslice),
    .apdone_blk(regslice_both_arpDataIn_V_data_V_U_apdone_blk)
);

arp_server_regslice_both #(
    .DataWidth( 64 ))
regslice_both_arpDataIn_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(arpDataIn_TKEEP),
    .vld_in(arpDataIn_TVALID),
    .ack_in(regslice_both_arpDataIn_V_keep_V_U_ack_in),
    .data_out(arpDataIn_TKEEP_int_regslice),
    .vld_out(regslice_both_arpDataIn_V_keep_V_U_vld_out),
    .ack_out(arpDataIn_TREADY_int_regslice),
    .apdone_blk(regslice_both_arpDataIn_V_keep_V_U_apdone_blk)
);

arp_server_regslice_both #(
    .DataWidth( 64 ))
regslice_both_arpDataIn_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(arpDataIn_TSTRB),
    .vld_in(arpDataIn_TVALID),
    .ack_in(regslice_both_arpDataIn_V_strb_V_U_ack_in),
    .data_out(arpDataIn_TSTRB_int_regslice),
    .vld_out(regslice_both_arpDataIn_V_strb_V_U_vld_out),
    .ack_out(arpDataIn_TREADY_int_regslice),
    .apdone_blk(regslice_both_arpDataIn_V_strb_V_U_apdone_blk)
);

arp_server_regslice_both #(
    .DataWidth( 1 ))
regslice_both_arpDataIn_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(arpDataIn_TLAST),
    .vld_in(arpDataIn_TVALID),
    .ack_in(regslice_both_arpDataIn_V_last_V_U_ack_in),
    .data_out(arpDataIn_TLAST_int_regslice),
    .vld_out(regslice_both_arpDataIn_V_last_V_U_vld_out),
    .ack_out(arpDataIn_TREADY_int_regslice),
    .apdone_blk(regslice_both_arpDataIn_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_118_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (opCode_V_fu_205_p4 == 16'd256) & (icmp_ln1049_fu_189_p2 == 1'd1))) begin
        icmp_ln1049_2_reg_327 <= grp_fu_158_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_118_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (opCode_V_fu_205_p4 == 16'd512) & (icmp_ln1049_fu_189_p2 == 1'd1))) begin
        icmp_ln1049_3_reg_323 <= grp_fu_158_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_118_p6 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1049_reg_304 <= icmp_ln1049_fu_189_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_118_p6 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1049_fu_189_p2 == 1'd1))) begin
        meta_hwAddrSrc_V_reg_317 <= {{arpDataIn_TDATA_int_regslice[223:176]}};
        meta_srcMac_V_reg_308 <= {{arpDataIn_TDATA_int_regslice[95:48]}};
        opCode_V_reg_313 <= {{arpDataIn_TDATA_int_regslice[175:160]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_118_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (grp_fu_158_p2 == 1'd1) & (opCode_V_fu_205_p4 == 16'd256) & (icmp_ln1049_fu_189_p2 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_118_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (grp_fu_158_p2 == 1'd1) & (opCode_V_fu_205_p4 == 16'd512) & (icmp_ln1049_fu_189_p2 == 1'd1)))) begin
        reg_172 <= {{arpDataIn_TDATA_int_regslice[255:224]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_118_p6 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (grp_fu_158_p2 == 1'd1) & (opCode_V_fu_205_p4 == 16'd256) & (icmp_ln1049_fu_189_p2 == 1'd1))) begin
        tmp_17_i_reg_331 <= {{arpDataIn_TDATA_int_regslice[159:96]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_300 <= tmp_nbreadreq_fu_118_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_118_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        wordCount_V <= select_ln80_fu_252_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_done_reg == 1'b0) & (tmp_nbreadreq_fu_118_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arpDataIn_TDATA_blk_n = arpDataIn_TVALID_int_regslice;
    end else begin
        arpDataIn_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_118_p6 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arpDataIn_TREADY_int_regslice = 1'b1;
    end else begin
        arpDataIn_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op48_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arpReplyFifo_blk_n = arpReplyFifo_full_n;
    end else begin
        arpReplyFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op48_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arpReplyFifo_write = 1'b1;
    end else begin
        arpReplyFifo_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op44_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arpTableInsertFifo_blk_n = arpTableInsertFifo_full_n;
    end else begin
        arpTableInsertFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op44_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arpTableInsertFifo_write = 1'b1;
    end else begin
        arpTableInsertFifo_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_done_reg == 1'b0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        myIpAddress_c_blk_n = myIpAddress_c_full_n;
    end else begin
        myIpAddress_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        myIpAddress_c_write = 1'b1;
    end else begin
        myIpAddress_c_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln870_fu_246_p2 = (wordCount_V + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op48_write_state2 == 1'b1) & (arpReplyFifo_full_n == 1'b0)) | ((ap_predicate_op44_write_state2 == 1'b1) & (arpTableInsertFifo_full_n == 1'b0)))) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | (myIpAddress_c_full_n == 1'b0) | ((tmp_nbreadreq_fu_118_p6 == 1'd1) & (arpDataIn_TVALID_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op48_write_state2 == 1'b1) & (arpReplyFifo_full_n == 1'b0)) | ((ap_predicate_op44_write_state2 == 1'b1) & (arpTableInsertFifo_full_n == 1'b0)))) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | (myIpAddress_c_full_n == 1'b0) | ((tmp_nbreadreq_fu_118_p6 == 1'd1) & (arpDataIn_TVALID_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op48_write_state2 == 1'b1) & (arpReplyFifo_full_n == 1'b0)) | ((ap_predicate_op44_write_state2 == 1'b1) & (arpTableInsertFifo_full_n == 1'b0)))) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | (myIpAddress_c_full_n == 1'b0) | ((tmp_nbreadreq_fu_118_p6 == 1'd1) & (arpDataIn_TVALID_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_done_reg == 1'b1) | (myIpAddress_c_full_n == 1'b0) | ((tmp_nbreadreq_fu_118_p6 == 1'd1) & (arpDataIn_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op48_write_state2 == 1'b1) & (arpReplyFifo_full_n == 1'b0)) | ((ap_predicate_op44_write_state2 == 1'b1) & (arpTableInsertFifo_full_n == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op44_write_state2 = ((icmp_ln1049_3_reg_323 == 1'd1) & (opCode_V_reg_313 == 16'd512) & (icmp_ln1049_reg_304 == 1'd1) & (tmp_reg_300 == 1'd1));
end

always @ (*) begin
    ap_predicate_op48_write_state2 = ((icmp_ln1049_2_reg_327 == 1'd1) & (opCode_V_reg_313 == 16'd256) & (icmp_ln1049_reg_304 == 1'd1) & (tmp_reg_300 == 1'd1));
end

assign arpDataIn_TREADY = regslice_both_arpDataIn_V_data_V_U_ack_in;

assign arpReplyFifo_din = tmp_18_i_fu_282_p7;

assign arpTableInsertFifo_din = or_ln_fu_266_p5;

assign grp_fu_158_p2 = ((protoAddrDst_V_fu_225_p4 == myIpAddress) ? 1'b1 : 1'b0);

assign icmp_ln1049_fu_189_p2 = ((wordCount_V == 4'd0) ? 1'b1 : 1'b0);

assign myIpAddress_c_din = myIpAddress;

assign opCode_V_fu_205_p4 = {{arpDataIn_TDATA_int_regslice[175:160]}};

assign or_ln_fu_266_p5 = {{{{{{1'd1}, {reg_172}}}, {16'd0}}}, {meta_hwAddrSrc_V_reg_317}};

assign protoAddrDst_V_fu_225_p4 = {{arpDataIn_TDATA_int_regslice[335:304]}};

assign select_ln80_fu_252_p3 = ((arpDataIn_TLAST_int_regslice[0:0] == 1'b1) ? 4'd0 : add_ln870_fu_246_p2);

assign tmp_18_i_fu_282_p7 = {{{{{{reg_172}, {16'd0}}, {meta_hwAddrSrc_V_reg_317}}, {tmp_17_i_reg_331}}, {16'd0}}, {meta_srcMac_V_reg_308}};

assign tmp_nbreadreq_fu_118_p6 = arpDataIn_TVALID_int_regslice;

endmodule //arp_server_arp_pkg_receiver
