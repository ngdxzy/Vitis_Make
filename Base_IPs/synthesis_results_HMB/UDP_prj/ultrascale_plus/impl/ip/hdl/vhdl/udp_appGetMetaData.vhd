-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity udp_appGetMetaData is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    DataInApp_TVALID : IN STD_LOGIC;
    agmdDataOut_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
    agmdDataOut_full_n : IN STD_LOGIC;
    agmdDataOut_write : OUT STD_LOGIC;
    agmdIdOut_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    agmdIdOut_full_n : IN STD_LOGIC;
    agmdIdOut_write : OUT STD_LOGIC;
    agmdpayloadLenOut_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    agmdpayloadLenOut_full_n : IN STD_LOGIC;
    agmdpayloadLenOut_write : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    DataInApp_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    DataInApp_TREADY : OUT STD_LOGIC;
    DataInApp_TKEEP : IN STD_LOGIC_VECTOR (63 downto 0);
    DataInApp_TSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
    DataInApp_TUSER : IN STD_LOGIC_VECTOR (95 downto 0);
    DataInApp_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    DataInApp_TDEST : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of udp_appGetMetaData is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv16_40 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal internal_ap_ready : STD_LOGIC;
    signal tmp_nbreadreq_fu_58_p8 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_nbwritereq_fu_76_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op9_read_state1 : BOOLEAN;
    signal ap_predicate_op16_write_state1 : BOOLEAN;
    signal ap_predicate_op26_read_state1 : BOOLEAN;
    signal ap_predicate_op32_write_state1 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal agmd_state_load_reg_231 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_235 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i_reg_239 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op53_write_state2 : BOOLEAN;
    signal tmp_102_reg_243 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op56_write_state2 : BOOLEAN;
    signal tmp_i_reg_252 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_105_reg_256 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op63_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal agmd_state : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal lenCount_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal DataInApp_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal agmdDataOut_blk_n : STD_LOGIC;
    signal agmdIdOut_blk_n : STD_LOGIC;
    signal agmdpayloadLenOut_blk_n : STD_LOGIC;
    signal grp_keep2len_fu_121_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal reg_139 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal grp_fu_135_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_99_reg_247 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_keep2len_fu_121_ap_ready : STD_LOGIC;
    signal add_ln870_fu_208_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln174_4_fu_161_p1 : STD_LOGIC_VECTOR (1023 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln174_fu_182_p1 : STD_LOGIC_VECTOR (1023 downto 0);
    signal zext_ln217_1_fu_203_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln217_fu_224_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_56_i_fu_151_p4 : STD_LOGIC_VECTOR (576 downto 0);
    signal tmp_49_i_fu_172_p4 : STD_LOGIC_VECTOR (576 downto 0);
    signal zext_ln217_fu_220_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_DataInApp_V_data_V_U_apdone_blk : STD_LOGIC;
    signal DataInApp_TDATA_int_regslice : STD_LOGIC_VECTOR (511 downto 0);
    signal DataInApp_TVALID_int_regslice : STD_LOGIC;
    signal DataInApp_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_DataInApp_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_DataInApp_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal DataInApp_TKEEP_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_DataInApp_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_DataInApp_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_DataInApp_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal DataInApp_TSTRB_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_DataInApp_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_DataInApp_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_DataInApp_V_user_V_U_apdone_blk : STD_LOGIC;
    signal DataInApp_TUSER_int_regslice : STD_LOGIC_VECTOR (95 downto 0);
    signal regslice_both_DataInApp_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_DataInApp_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_DataInApp_V_last_V_U_apdone_blk : STD_LOGIC;
    signal DataInApp_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_DataInApp_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_DataInApp_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_DataInApp_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal DataInApp_TDEST_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal regslice_both_DataInApp_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_DataInApp_V_dest_V_U_ack_in : STD_LOGIC;
    signal ap_condition_229 : BOOLEAN;
    signal ap_condition_379 : BOOLEAN;
    signal ap_condition_236 : BOOLEAN;
    signal ap_condition_391 : BOOLEAN;
    signal ap_condition_388 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component udp_keep2len IS
    port (
        ap_ready : OUT STD_LOGIC;
        keepValue : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component udp_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_keep2len_fu_121 : component udp_keep2len
    port map (
        ap_ready => grp_keep2len_fu_121_ap_ready,
        keepValue => DataInApp_TKEEP_int_regslice,
        ap_return => grp_keep2len_fu_121_ap_return);

    regslice_both_DataInApp_V_data_V_U : component udp_regslice_both
    generic map (
        DataWidth => 512)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => DataInApp_TDATA,
        vld_in => DataInApp_TVALID,
        ack_in => regslice_both_DataInApp_V_data_V_U_ack_in,
        data_out => DataInApp_TDATA_int_regslice,
        vld_out => DataInApp_TVALID_int_regslice,
        ack_out => DataInApp_TREADY_int_regslice,
        apdone_blk => regslice_both_DataInApp_V_data_V_U_apdone_blk);

    regslice_both_DataInApp_V_keep_V_U : component udp_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => DataInApp_TKEEP,
        vld_in => DataInApp_TVALID,
        ack_in => regslice_both_DataInApp_V_keep_V_U_ack_in,
        data_out => DataInApp_TKEEP_int_regslice,
        vld_out => regslice_both_DataInApp_V_keep_V_U_vld_out,
        ack_out => DataInApp_TREADY_int_regslice,
        apdone_blk => regslice_both_DataInApp_V_keep_V_U_apdone_blk);

    regslice_both_DataInApp_V_strb_V_U : component udp_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => DataInApp_TSTRB,
        vld_in => DataInApp_TVALID,
        ack_in => regslice_both_DataInApp_V_strb_V_U_ack_in,
        data_out => DataInApp_TSTRB_int_regslice,
        vld_out => regslice_both_DataInApp_V_strb_V_U_vld_out,
        ack_out => DataInApp_TREADY_int_regslice,
        apdone_blk => regslice_both_DataInApp_V_strb_V_U_apdone_blk);

    regslice_both_DataInApp_V_user_V_U : component udp_regslice_both
    generic map (
        DataWidth => 96)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => DataInApp_TUSER,
        vld_in => DataInApp_TVALID,
        ack_in => regslice_both_DataInApp_V_user_V_U_ack_in,
        data_out => DataInApp_TUSER_int_regslice,
        vld_out => regslice_both_DataInApp_V_user_V_U_vld_out,
        ack_out => DataInApp_TREADY_int_regslice,
        apdone_blk => regslice_both_DataInApp_V_user_V_U_apdone_blk);

    regslice_both_DataInApp_V_last_V_U : component udp_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => DataInApp_TLAST,
        vld_in => DataInApp_TVALID,
        ack_in => regslice_both_DataInApp_V_last_V_U_ack_in,
        data_out => DataInApp_TLAST_int_regslice,
        vld_out => regslice_both_DataInApp_V_last_V_U_vld_out,
        ack_out => DataInApp_TREADY_int_regslice,
        apdone_blk => regslice_both_DataInApp_V_last_V_U_apdone_blk);

    regslice_both_DataInApp_V_dest_V_U : component udp_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => DataInApp_TDEST,
        vld_in => DataInApp_TVALID,
        ack_in => regslice_both_DataInApp_V_dest_V_U_ack_in,
        data_out => DataInApp_TDEST_int_regslice,
        vld_out => regslice_both_DataInApp_V_dest_V_U_vld_out,
        ack_out => DataInApp_TREADY_int_regslice,
        apdone_blk => regslice_both_DataInApp_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= real_start;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    agmd_state_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_379)) then
                if (((ap_const_lv1_1 = agmd_state) and (grp_fu_135_p1 = ap_const_lv1_1))) then 
                    agmd_state <= ap_const_lv1_0;
                elsif (((ap_const_lv1_0 = agmd_state) and (grp_fu_135_p1 = ap_const_lv1_0))) then 
                    agmd_state <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;

    lenCount_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_388)) then
                if ((ap_const_boolean_1 = ap_condition_391)) then 
                    lenCount_V <= add_ln870_fu_208_p2;
                elsif (((tmp_1_i_reg_239 = ap_const_lv1_1) and (ap_const_lv1_0 = agmd_state_load_reg_231))) then 
                    lenCount_V <= ap_const_lv16_40;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                agmd_state_load_reg_231 <= agmd_state;
                tmp_reg_235 <= tmp_nbreadreq_fu_58_p8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_nbwritereq_fu_76_p3 = ap_const_lv1_1) and (ap_const_lv1_1 = agmd_state) and (tmp_nbreadreq_fu_58_p8 = ap_const_lv1_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (grp_fu_135_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((grp_nbwritereq_fu_76_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_58_p8 = ap_const_lv1_1) and (ap_const_lv1_0 = agmd_state) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (grp_fu_135_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_139 <= grp_keep2len_fu_121_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbwritereq_fu_76_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_58_p8 = ap_const_lv1_1) and (ap_const_lv1_0 = agmd_state) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_102_reg_243 <= DataInApp_TLAST_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbwritereq_fu_76_p3 = ap_const_lv1_1) and (ap_const_lv1_1 = agmd_state) and (tmp_nbreadreq_fu_58_p8 = ap_const_lv1_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_105_reg_256 <= DataInApp_TLAST_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_58_p8 = ap_const_lv1_1) and (ap_const_lv1_0 = agmd_state) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_1_i_reg_239 <= (0=>agmdDataOut_full_n, others=>'-');
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbwritereq_fu_76_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_58_p8 = ap_const_lv1_1) and (ap_const_lv1_0 = agmd_state) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_99_reg_247 <= DataInApp_TDEST_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = agmd_state) and (tmp_nbreadreq_fu_58_p8 = ap_const_lv1_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_i_reg_252 <= (0=>agmdDataOut_full_n, others=>'-');
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;

    DataInApp_TDATA_blk_n_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_predicate_op9_read_state1, ap_predicate_op26_read_state1, ap_done_reg, ap_block_pp0_stage0, DataInApp_TVALID_int_regslice)
    begin
        if ((((ap_done_reg = ap_const_logic_0) and (ap_predicate_op26_read_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_done_reg = ap_const_logic_0) and (ap_predicate_op9_read_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            DataInApp_TDATA_blk_n <= DataInApp_TVALID_int_regslice;
        else 
            DataInApp_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    DataInApp_TREADY <= regslice_both_DataInApp_V_data_V_U_ack_in;

    DataInApp_TREADY_int_regslice_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_predicate_op9_read_state1, ap_predicate_op26_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op26_read_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op9_read_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            DataInApp_TREADY_int_regslice <= ap_const_logic_1;
        else 
            DataInApp_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    add_ln217_fu_224_p2 <= std_logic_vector(unsigned(lenCount_V) + unsigned(zext_ln217_fu_220_p1));
    add_ln870_fu_208_p2 <= std_logic_vector(unsigned(lenCount_V) + unsigned(ap_const_lv16_40));

    agmdDataOut_blk_n_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, agmdDataOut_full_n, ap_predicate_op16_write_state1, ap_predicate_op32_write_state1, ap_done_reg, ap_block_pp0_stage0)
    begin
        if ((((ap_done_reg = ap_const_logic_0) and (ap_predicate_op32_write_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_done_reg = ap_const_logic_0) and (ap_predicate_op16_write_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            agmdDataOut_blk_n <= agmdDataOut_full_n;
        else 
            agmdDataOut_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    agmdDataOut_din_assign_proc : process(ap_predicate_op16_write_state1, ap_predicate_op32_write_state1, zext_ln174_4_fu_161_p1, zext_ln174_fu_182_p1, ap_condition_229)
    begin
        if ((ap_const_boolean_1 = ap_condition_229)) then
            if ((ap_predicate_op32_write_state1 = ap_const_boolean_1)) then 
                agmdDataOut_din <= zext_ln174_fu_182_p1;
            elsif ((ap_predicate_op16_write_state1 = ap_const_boolean_1)) then 
                agmdDataOut_din <= zext_ln174_4_fu_161_p1;
            else 
                agmdDataOut_din
            end if;
        else 
            agmdDataOut_din
        end if; 
    end process;


    agmdDataOut_write_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_predicate_op16_write_state1, ap_predicate_op32_write_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op32_write_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op16_write_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            agmdDataOut_write <= ap_const_logic_1;
        else 
            agmdDataOut_write <= ap_const_logic_0;
        end if; 
    end process;


    agmdIdOut_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, agmdIdOut_full_n, ap_predicate_op53_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op53_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            agmdIdOut_blk_n <= agmdIdOut_full_n;
        else 
            agmdIdOut_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    agmdIdOut_din <= tmp_99_reg_247;

    agmdIdOut_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op53_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op53_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            agmdIdOut_write <= ap_const_logic_1;
        else 
            agmdIdOut_write <= ap_const_logic_0;
        end if; 
    end process;


    agmdpayloadLenOut_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, agmdpayloadLenOut_full_n, ap_predicate_op56_write_state2, ap_predicate_op63_write_state2, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op63_write_state2 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op56_write_state2 = ap_const_boolean_1)))) then 
            agmdpayloadLenOut_blk_n <= agmdpayloadLenOut_full_n;
        else 
            agmdpayloadLenOut_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    agmdpayloadLenOut_din_assign_proc : process(ap_predicate_op56_write_state2, ap_predicate_op63_write_state2, zext_ln217_1_fu_203_p1, add_ln217_fu_224_p2, ap_condition_236)
    begin
        if ((ap_const_boolean_1 = ap_condition_236)) then
            if ((ap_predicate_op63_write_state2 = ap_const_boolean_1)) then 
                agmdpayloadLenOut_din <= add_ln217_fu_224_p2;
            elsif ((ap_predicate_op56_write_state2 = ap_const_boolean_1)) then 
                agmdpayloadLenOut_din <= zext_ln217_1_fu_203_p1;
            else 
                agmdpayloadLenOut_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            agmdpayloadLenOut_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    agmdpayloadLenOut_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op56_write_state2, ap_predicate_op63_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op63_write_state2 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op56_write_state2 = ap_const_boolean_1)))) then 
            agmdpayloadLenOut_write <= ap_const_logic_1;
        else 
            agmdpayloadLenOut_write <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(real_start, ap_enable_reg_pp0_iter1, ap_predicate_op9_read_state1, agmdDataOut_full_n, ap_predicate_op16_write_state1, ap_predicate_op26_read_state1, ap_predicate_op32_write_state1, ap_done_reg, agmdIdOut_full_n, ap_predicate_op53_write_state2, agmdpayloadLenOut_full_n, ap_predicate_op56_write_state2, ap_predicate_op63_write_state2, DataInApp_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((real_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op32_write_state1 = ap_const_boolean_1) and (ap_const_logic_0 = agmdDataOut_full_n)) or ((ap_predicate_op26_read_state1 = ap_const_boolean_1) and (ap_const_logic_0 = DataInApp_TVALID_int_regslice)) or ((ap_predicate_op16_write_state1 = ap_const_boolean_1) and (ap_const_logic_0 = agmdDataOut_full_n)) or ((ap_predicate_op9_read_state1 = ap_const_boolean_1) and (ap_const_logic_0 = DataInApp_TVALID_int_regslice)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_const_logic_0 = agmdpayloadLenOut_full_n) and (ap_predicate_op63_write_state2 = ap_const_boolean_1)) or ((ap_const_logic_0 = agmdpayloadLenOut_full_n) and (ap_predicate_op56_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op53_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = agmdIdOut_full_n)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(real_start, ap_enable_reg_pp0_iter1, ap_predicate_op9_read_state1, agmdDataOut_full_n, ap_predicate_op16_write_state1, ap_predicate_op26_read_state1, ap_predicate_op32_write_state1, ap_done_reg, agmdIdOut_full_n, ap_predicate_op53_write_state2, agmdpayloadLenOut_full_n, ap_predicate_op56_write_state2, ap_predicate_op63_write_state2, DataInApp_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((real_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op32_write_state1 = ap_const_boolean_1) and (ap_const_logic_0 = agmdDataOut_full_n)) or ((ap_predicate_op26_read_state1 = ap_const_boolean_1) and (ap_const_logic_0 = DataInApp_TVALID_int_regslice)) or ((ap_predicate_op16_write_state1 = ap_const_boolean_1) and (ap_const_logic_0 = agmdDataOut_full_n)) or ((ap_predicate_op9_read_state1 = ap_const_boolean_1) and (ap_const_logic_0 = DataInApp_TVALID_int_regslice)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_const_logic_0 = agmdpayloadLenOut_full_n) and (ap_predicate_op63_write_state2 = ap_const_boolean_1)) or ((ap_const_logic_0 = agmdpayloadLenOut_full_n) and (ap_predicate_op56_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op53_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = agmdIdOut_full_n)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(real_start, ap_enable_reg_pp0_iter1, ap_predicate_op9_read_state1, agmdDataOut_full_n, ap_predicate_op16_write_state1, ap_predicate_op26_read_state1, ap_predicate_op32_write_state1, ap_done_reg, agmdIdOut_full_n, ap_predicate_op53_write_state2, agmdpayloadLenOut_full_n, ap_predicate_op56_write_state2, ap_predicate_op63_write_state2, DataInApp_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((real_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op32_write_state1 = ap_const_boolean_1) and (ap_const_logic_0 = agmdDataOut_full_n)) or ((ap_predicate_op26_read_state1 = ap_const_boolean_1) and (ap_const_logic_0 = DataInApp_TVALID_int_regslice)) or ((ap_predicate_op16_write_state1 = ap_const_boolean_1) and (ap_const_logic_0 = agmdDataOut_full_n)) or ((ap_predicate_op9_read_state1 = ap_const_boolean_1) and (ap_const_logic_0 = DataInApp_TVALID_int_regslice)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_const_logic_0 = agmdpayloadLenOut_full_n) and (ap_predicate_op63_write_state2 = ap_const_boolean_1)) or ((ap_const_logic_0 = agmdpayloadLenOut_full_n) and (ap_predicate_op56_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op53_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = agmdIdOut_full_n)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_predicate_op9_read_state1, agmdDataOut_full_n, ap_predicate_op16_write_state1, ap_predicate_op26_read_state1, ap_predicate_op32_write_state1, ap_done_reg, DataInApp_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op32_write_state1 = ap_const_boolean_1) and (ap_const_logic_0 = agmdDataOut_full_n)) or ((ap_predicate_op26_read_state1 = ap_const_boolean_1) and (ap_const_logic_0 = DataInApp_TVALID_int_regslice)) or ((ap_predicate_op16_write_state1 = ap_const_boolean_1) and (ap_const_logic_0 = agmdDataOut_full_n)) or ((ap_predicate_op9_read_state1 = ap_const_boolean_1) and (ap_const_logic_0 = DataInApp_TVALID_int_regslice)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(agmdIdOut_full_n, ap_predicate_op53_write_state2, agmdpayloadLenOut_full_n, ap_predicate_op56_write_state2, ap_predicate_op63_write_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((ap_const_logic_0 = agmdpayloadLenOut_full_n) and (ap_predicate_op63_write_state2 = ap_const_boolean_1)) or ((ap_const_logic_0 = agmdpayloadLenOut_full_n) and (ap_predicate_op56_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op53_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = agmdIdOut_full_n)));
    end process;


    ap_condition_229_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_01001)
    begin
                ap_condition_229 <= ((real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001));
    end process;


    ap_condition_236_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001)
    begin
                ap_condition_236 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001));
    end process;


    ap_condition_379_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_58_p8, grp_nbwritereq_fu_76_p3, ap_block_pp0_stage0_11001)
    begin
                ap_condition_379 <= ((grp_nbwritereq_fu_76_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_58_p8 = ap_const_lv1_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_388_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_reg_235, ap_block_pp0_stage0_11001)
    begin
                ap_condition_388 <= ((tmp_reg_235 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_391_assign_proc : process(agmd_state_load_reg_231, tmp_i_reg_252, tmp_105_reg_256)
    begin
                ap_condition_391 <= ((ap_const_lv1_1 = agmd_state_load_reg_231) and (tmp_105_reg_256 = ap_const_lv1_0) and (tmp_i_reg_252 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_done_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= real_start;

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((real_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op16_write_state1_assign_proc : process(tmp_nbreadreq_fu_58_p8, grp_nbwritereq_fu_76_p3, agmd_state)
    begin
                ap_predicate_op16_write_state1 <= ((grp_nbwritereq_fu_76_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_58_p8 = ap_const_lv1_1) and (ap_const_lv1_0 = agmd_state));
    end process;


    ap_predicate_op26_read_state1_assign_proc : process(tmp_nbreadreq_fu_58_p8, grp_nbwritereq_fu_76_p3, agmd_state)
    begin
                ap_predicate_op26_read_state1 <= ((grp_nbwritereq_fu_76_p3 = ap_const_lv1_1) and (ap_const_lv1_1 = agmd_state) and (tmp_nbreadreq_fu_58_p8 = ap_const_lv1_1));
    end process;


    ap_predicate_op32_write_state1_assign_proc : process(tmp_nbreadreq_fu_58_p8, grp_nbwritereq_fu_76_p3, agmd_state)
    begin
                ap_predicate_op32_write_state1 <= ((grp_nbwritereq_fu_76_p3 = ap_const_lv1_1) and (ap_const_lv1_1 = agmd_state) and (tmp_nbreadreq_fu_58_p8 = ap_const_lv1_1));
    end process;


    ap_predicate_op53_write_state2_assign_proc : process(agmd_state_load_reg_231, tmp_reg_235, tmp_1_i_reg_239)
    begin
                ap_predicate_op53_write_state2 <= ((tmp_1_i_reg_239 = ap_const_lv1_1) and (tmp_reg_235 = ap_const_lv1_1) and (ap_const_lv1_0 = agmd_state_load_reg_231));
    end process;


    ap_predicate_op56_write_state2_assign_proc : process(agmd_state_load_reg_231, tmp_reg_235, tmp_1_i_reg_239, tmp_102_reg_243)
    begin
                ap_predicate_op56_write_state2 <= ((tmp_102_reg_243 = ap_const_lv1_1) and (tmp_1_i_reg_239 = ap_const_lv1_1) and (tmp_reg_235 = ap_const_lv1_1) and (ap_const_lv1_0 = agmd_state_load_reg_231));
    end process;


    ap_predicate_op63_write_state2_assign_proc : process(agmd_state_load_reg_231, tmp_reg_235, tmp_i_reg_252, tmp_105_reg_256)
    begin
                ap_predicate_op63_write_state2 <= ((tmp_reg_235 = ap_const_lv1_1) and (ap_const_lv1_1 = agmd_state_load_reg_231) and (tmp_105_reg_256 = ap_const_lv1_1) and (tmp_i_reg_252 = ap_const_lv1_1));
    end process;


    ap_predicate_op9_read_state1_assign_proc : process(tmp_nbreadreq_fu_58_p8, grp_nbwritereq_fu_76_p3, agmd_state)
    begin
                ap_predicate_op9_read_state1 <= ((grp_nbwritereq_fu_76_p3 = ap_const_lv1_1) and (tmp_nbreadreq_fu_58_p8 = ap_const_lv1_1) and (ap_const_lv1_0 = agmd_state));
    end process;

    ap_ready <= internal_ap_ready;

    ap_reset_idle_pp0_assign_proc : process(real_start, ap_idle_pp0_0to0)
    begin
        if (((real_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_135_p1 <= DataInApp_TLAST_int_regslice;
    grp_nbwritereq_fu_76_p3 <= (0=>agmdDataOut_full_n, others=>'-');

    internal_ap_ready_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone)
    begin
        if (((real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_49_i_fu_172_p4 <= ((DataInApp_TLAST_int_regslice & DataInApp_TKEEP_int_regslice) & DataInApp_TDATA_int_regslice);
    tmp_56_i_fu_151_p4 <= ((DataInApp_TLAST_int_regslice & DataInApp_TKEEP_int_regslice) & DataInApp_TDATA_int_regslice);
    tmp_nbreadreq_fu_58_p8 <= (0=>(DataInApp_TVALID_int_regslice), others=>'-');
    zext_ln174_4_fu_161_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_56_i_fu_151_p4),1024));
    zext_ln174_fu_182_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_49_i_fu_172_p4),1024));
    zext_ln217_1_fu_203_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_139),16));
    zext_ln217_fu_220_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_139),16));
end behav;
