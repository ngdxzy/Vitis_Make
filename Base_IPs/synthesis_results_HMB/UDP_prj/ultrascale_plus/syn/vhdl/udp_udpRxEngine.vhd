-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity udp_udpRxEngine is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rxUdpDataIn_TVALID : IN STD_LOGIC;
    ureDataPayload_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
    ureDataPayload_full_n : IN STD_LOGIC;
    ureDataPayload_write : OUT STD_LOGIC;
    ureMetaData_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    ureMetaData_full_n : IN STD_LOGIC;
    ureMetaData_write : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    rxUdpDataIn_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    rxUdpDataIn_TREADY : OUT STD_LOGIC;
    rxUdpDataIn_TKEEP : IN STD_LOGIC_VECTOR (63 downto 0);
    rxUdpDataIn_TSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
    rxUdpDataIn_TLAST : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of udp_udpRxEngine is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_98 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_97 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010111";
    constant ap_const_lv32_88 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_87 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000111";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_A7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100111";
    constant ap_const_lv32_B8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_B7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110111";
    constant ap_const_lv29_10000000 : STD_LOGIC_VECTOR (28 downto 0) := "10000000000000000000000000000";
    constant ap_const_lv224_lc_1 : STD_LOGIC_VECTOR (223 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal internal_ap_ready : STD_LOGIC;
    signal ure_state_load_load_fu_230_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_nbreadreq_fu_134_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op8_read_state1 : BOOLEAN;
    signal ap_predicate_op26_read_state1 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ure_state_load_reg_548 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_reg_552 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op75_write_state2 : BOOLEAN;
    signal tmp_reg_572 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op81_write_state2 : BOOLEAN;
    signal tmp_23_reg_576 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op84_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ure_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal prevWord_data_V_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal prevWord_keep_V_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal rxUdpDataIn_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ureMetaData_blk_n : STD_LOGIC;
    signal ureDataPayload_blk_n : STD_LOGIC;
    signal reg_222 : STD_LOGIC_VECTOR (287 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_226 : STD_LOGIC_VECTOR (35 downto 0);
    signal trunc_ln674_11_fu_240_p1 : STD_LOGIC_VECTOR (223 downto 0);
    signal trunc_ln674_11_reg_559 : STD_LOGIC_VECTOR (223 downto 0);
    signal trunc_ln674_12_fu_244_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln674_12_reg_564 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_198_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_148_i_reg_580 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_148_1_i_reg_585 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_148_2_i_reg_590 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_148_3_i_reg_595 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_151_i_reg_600 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_151_1_i_reg_605 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_151_2_i_reg_610 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_151_3_i_reg_615 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_154_i_reg_620 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_154_1_i_reg_625 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_157_i_reg_630 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_157_1_i_reg_635 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_sendWord_last_V_reg_174 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_sendWord_last_V_reg_174 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_248_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_435_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln414_fu_488_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_18_fu_453_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln414_2_fu_492_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln174_fu_422_p1 : STD_LOGIC_VECTOR (1023 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln174_3_fu_483_p1 : STD_LOGIC_VECTOR (1023 downto 0);
    signal zext_ln174_2_fu_531_p1 : STD_LOGIC_VECTOR (1023 downto 0);
    signal trunc_ln414_1_fu_406_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal trunc_ln414_fu_402_p1 : STD_LOGIC_VECTOR (287 downto 0);
    signal or_ln_fu_410_p5 : STD_LOGIC_VECTOR (576 downto 0);
    signal trunc_ln674_10_fu_431_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal trunc_ln674_fu_427_p1 : STD_LOGIC_VECTOR (287 downto 0);
    signal tmp_30_i_fu_471_p6 : STD_LOGIC_VECTOR (576 downto 0);
    signal or_ln174_1_fu_496_p14 : STD_LOGIC_VECTOR (96 downto 0);
    signal or_ln174_2_fu_519_p5 : STD_LOGIC_VECTOR (576 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_rxUdpDataIn_V_data_V_U_apdone_blk : STD_LOGIC;
    signal rxUdpDataIn_TDATA_int_regslice : STD_LOGIC_VECTOR (511 downto 0);
    signal rxUdpDataIn_TVALID_int_regslice : STD_LOGIC;
    signal rxUdpDataIn_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_rxUdpDataIn_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_rxUdpDataIn_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal rxUdpDataIn_TKEEP_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_rxUdpDataIn_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_rxUdpDataIn_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_rxUdpDataIn_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal rxUdpDataIn_TSTRB_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_rxUdpDataIn_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_rxUdpDataIn_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_rxUdpDataIn_V_last_V_U_apdone_blk : STD_LOGIC;
    signal rxUdpDataIn_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_rxUdpDataIn_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_rxUdpDataIn_V_last_V_U_ack_in : STD_LOGIC;
    signal ap_condition_206 : BOOLEAN;
    signal ap_condition_243 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component udp_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_rxUdpDataIn_V_data_V_U : component udp_regslice_both
    generic map (
        DataWidth => 512)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => rxUdpDataIn_TDATA,
        vld_in => rxUdpDataIn_TVALID,
        ack_in => regslice_both_rxUdpDataIn_V_data_V_U_ack_in,
        data_out => rxUdpDataIn_TDATA_int_regslice,
        vld_out => rxUdpDataIn_TVALID_int_regslice,
        ack_out => rxUdpDataIn_TREADY_int_regslice,
        apdone_blk => regslice_both_rxUdpDataIn_V_data_V_U_apdone_blk);

    regslice_both_rxUdpDataIn_V_keep_V_U : component udp_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => rxUdpDataIn_TKEEP,
        vld_in => rxUdpDataIn_TVALID,
        ack_in => regslice_both_rxUdpDataIn_V_keep_V_U_ack_in,
        data_out => rxUdpDataIn_TKEEP_int_regslice,
        vld_out => regslice_both_rxUdpDataIn_V_keep_V_U_vld_out,
        ack_out => rxUdpDataIn_TREADY_int_regslice,
        apdone_blk => regslice_both_rxUdpDataIn_V_keep_V_U_apdone_blk);

    regslice_both_rxUdpDataIn_V_strb_V_U : component udp_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => rxUdpDataIn_TSTRB,
        vld_in => rxUdpDataIn_TVALID,
        ack_in => regslice_both_rxUdpDataIn_V_strb_V_U_ack_in,
        data_out => rxUdpDataIn_TSTRB_int_regslice,
        vld_out => regslice_both_rxUdpDataIn_V_strb_V_U_vld_out,
        ack_out => rxUdpDataIn_TREADY_int_regslice,
        apdone_blk => regslice_both_rxUdpDataIn_V_strb_V_U_apdone_blk);

    regslice_both_rxUdpDataIn_V_last_V_U : component udp_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => rxUdpDataIn_TLAST,
        vld_in => rxUdpDataIn_TVALID,
        ack_in => regslice_both_rxUdpDataIn_V_last_V_U_ack_in,
        data_out => rxUdpDataIn_TLAST_int_regslice,
        vld_out => regslice_both_rxUdpDataIn_V_last_V_U_vld_out,
        ack_out => rxUdpDataIn_TREADY_int_regslice,
        apdone_blk => regslice_both_rxUdpDataIn_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= real_start;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_sendWord_last_V_reg_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_134_p6 = ap_const_lv1_1) and (ure_state = ap_const_lv2_1) and (real_start = ap_const_logic_1) and (tmp_20_fu_248_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (grp_fu_198_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_sendWord_last_V_reg_174 <= ap_const_lv1_1;
            elsif ((((grp_nbreadreq_fu_134_p6 = ap_const_lv1_1) and (ure_state = ap_const_lv2_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (grp_fu_198_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((grp_nbreadreq_fu_134_p6 = ap_const_lv1_1) and (ure_state = ap_const_lv2_1) and (real_start = ap_const_logic_1) and (tmp_20_fu_248_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (grp_fu_198_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter1_sendWord_last_V_reg_174 <= ap_const_lv1_0;
            elsif (((real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_sendWord_last_V_reg_174 <= ap_phi_reg_pp0_iter0_sendWord_last_V_reg_174;
            end if; 
        end if;
    end process;

    prevWord_data_V_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_206)) then
                if (((tmp_reg_572 = ap_const_lv1_1) and (ure_state_load_reg_548 = ap_const_lv2_0))) then 
                    prevWord_data_V_1 <= zext_ln414_fu_488_p1;
                elsif (((tmp_8_reg_552 = ap_const_lv1_1) and (ure_state_load_reg_548 = ap_const_lv2_1))) then 
                    prevWord_data_V_1 <= p_Result_s_fu_435_p5;
                end if;
            end if; 
        end if;
    end process;

    prevWord_keep_V_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_206)) then
                if (((tmp_reg_572 = ap_const_lv1_1) and (ure_state_load_reg_548 = ap_const_lv2_0))) then 
                    prevWord_keep_V_1 <= zext_ln414_2_fu_492_p1;
                elsif (((tmp_8_reg_552 = ap_const_lv1_1) and (ure_state_load_reg_548 = ap_const_lv2_1))) then 
                    prevWord_keep_V_1 <= p_Result_18_fu_453_p5;
                end if;
            end if; 
        end if;
    end process;

    ure_state_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_134_p6 = ap_const_lv1_1) and (ure_state = ap_const_lv2_0) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (grp_fu_198_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ure_state <= ap_const_lv2_1;
            elsif (((grp_nbreadreq_fu_134_p6 = ap_const_lv1_1) and (ure_state = ap_const_lv2_1) and (real_start = ap_const_logic_1) and (tmp_20_fu_248_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (grp_fu_198_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ure_state <= ap_const_lv2_2;
            elsif ((((grp_nbreadreq_fu_134_p6 = ap_const_lv1_1) and (ure_state = ap_const_lv2_1) and (real_start = ap_const_logic_1) and (tmp_20_fu_248_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (grp_fu_198_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ure_state_load_load_fu_230_p1 = ap_const_lv2_2) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ure_state <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_134_p6 = ap_const_lv1_1) and (ure_state = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Result_148_1_i_reg_585 <= rxUdpDataIn_TDATA_int_regslice(119 downto 112);
                p_Result_148_2_i_reg_590 <= rxUdpDataIn_TDATA_int_regslice(111 downto 104);
                p_Result_148_3_i_reg_595 <= rxUdpDataIn_TDATA_int_regslice(103 downto 96);
                p_Result_148_i_reg_580 <= rxUdpDataIn_TDATA_int_regslice(127 downto 120);
                p_Result_151_1_i_reg_605 <= rxUdpDataIn_TDATA_int_regslice(151 downto 144);
                p_Result_151_2_i_reg_610 <= rxUdpDataIn_TDATA_int_regslice(143 downto 136);
                p_Result_151_3_i_reg_615 <= rxUdpDataIn_TDATA_int_regslice(135 downto 128);
                p_Result_151_i_reg_600 <= rxUdpDataIn_TDATA_int_regslice(159 downto 152);
                p_Result_154_1_i_reg_625 <= rxUdpDataIn_TDATA_int_regslice(167 downto 160);
                p_Result_154_i_reg_620 <= rxUdpDataIn_TDATA_int_regslice(175 downto 168);
                p_Result_157_1_i_reg_635 <= rxUdpDataIn_TDATA_int_regslice(183 downto 176);
                p_Result_157_i_reg_630 <= rxUdpDataIn_TDATA_int_regslice(191 downto 184);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_nbreadreq_fu_134_p6 = ap_const_lv1_1) and (ure_state = ap_const_lv2_0) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((grp_nbreadreq_fu_134_p6 = ap_const_lv1_1) and (ure_state = ap_const_lv2_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_222 <= rxUdpDataIn_TDATA_int_regslice(511 downto 224);
                reg_226 <= rxUdpDataIn_TKEEP_int_regslice(63 downto 28);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_134_p6 = ap_const_lv1_1) and (ure_state = ap_const_lv2_0) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_23_reg_576 <= rxUdpDataIn_TLAST_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ure_state = ap_const_lv2_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_8_reg_552 <= grp_nbreadreq_fu_134_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ure_state = ap_const_lv2_0) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_reg_572 <= grp_nbreadreq_fu_134_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_134_p6 = ap_const_lv1_1) and (ure_state = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                trunc_ln674_11_reg_559 <= trunc_ln674_11_fu_240_p1;
                trunc_ln674_12_reg_564 <= trunc_ln674_12_fu_244_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ure_state_load_reg_548 <= ure_state;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(real_start, ap_enable_reg_pp0_iter1, ap_predicate_op8_read_state1, ap_predicate_op26_read_state1, ap_done_reg, ureDataPayload_full_n, ure_state_load_reg_548, ap_predicate_op75_write_state2, ureMetaData_full_n, ap_predicate_op81_write_state2, ap_predicate_op84_write_state2, rxUdpDataIn_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((real_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op26_read_state1 = ap_const_boolean_1) and (rxUdpDataIn_TVALID_int_regslice = ap_const_logic_0)) or ((rxUdpDataIn_TVALID_int_regslice = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op84_write_state2 = ap_const_boolean_1) and (ureDataPayload_full_n = ap_const_logic_0)) or ((ap_predicate_op81_write_state2 = ap_const_boolean_1) and (ureMetaData_full_n = ap_const_logic_0)) or ((ap_predicate_op75_write_state2 = ap_const_boolean_1) and (ureDataPayload_full_n = ap_const_logic_0)) or ((ure_state_load_reg_548 = ap_const_lv2_2) and (ureDataPayload_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(real_start, ap_enable_reg_pp0_iter1, ap_predicate_op8_read_state1, ap_predicate_op26_read_state1, ap_done_reg, ureDataPayload_full_n, ure_state_load_reg_548, ap_predicate_op75_write_state2, ureMetaData_full_n, ap_predicate_op81_write_state2, ap_predicate_op84_write_state2, rxUdpDataIn_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((real_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op26_read_state1 = ap_const_boolean_1) and (rxUdpDataIn_TVALID_int_regslice = ap_const_logic_0)) or ((rxUdpDataIn_TVALID_int_regslice = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op84_write_state2 = ap_const_boolean_1) and (ureDataPayload_full_n = ap_const_logic_0)) or ((ap_predicate_op81_write_state2 = ap_const_boolean_1) and (ureMetaData_full_n = ap_const_logic_0)) or ((ap_predicate_op75_write_state2 = ap_const_boolean_1) and (ureDataPayload_full_n = ap_const_logic_0)) or ((ure_state_load_reg_548 = ap_const_lv2_2) and (ureDataPayload_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(real_start, ap_enable_reg_pp0_iter1, ap_predicate_op8_read_state1, ap_predicate_op26_read_state1, ap_done_reg, ureDataPayload_full_n, ure_state_load_reg_548, ap_predicate_op75_write_state2, ureMetaData_full_n, ap_predicate_op81_write_state2, ap_predicate_op84_write_state2, rxUdpDataIn_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((real_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op26_read_state1 = ap_const_boolean_1) and (rxUdpDataIn_TVALID_int_regslice = ap_const_logic_0)) or ((rxUdpDataIn_TVALID_int_regslice = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op84_write_state2 = ap_const_boolean_1) and (ureDataPayload_full_n = ap_const_logic_0)) or ((ap_predicate_op81_write_state2 = ap_const_boolean_1) and (ureMetaData_full_n = ap_const_logic_0)) or ((ap_predicate_op75_write_state2 = ap_const_boolean_1) and (ureDataPayload_full_n = ap_const_logic_0)) or ((ure_state_load_reg_548 = ap_const_lv2_2) and (ureDataPayload_full_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_predicate_op8_read_state1, ap_predicate_op26_read_state1, ap_done_reg, rxUdpDataIn_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op26_read_state1 = ap_const_boolean_1) and (rxUdpDataIn_TVALID_int_regslice = ap_const_logic_0)) or ((rxUdpDataIn_TVALID_int_regslice = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(ureDataPayload_full_n, ure_state_load_reg_548, ap_predicate_op75_write_state2, ureMetaData_full_n, ap_predicate_op81_write_state2, ap_predicate_op84_write_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((ap_predicate_op84_write_state2 = ap_const_boolean_1) and (ureDataPayload_full_n = ap_const_logic_0)) or ((ap_predicate_op81_write_state2 = ap_const_boolean_1) and (ureMetaData_full_n = ap_const_logic_0)) or ((ap_predicate_op75_write_state2 = ap_const_boolean_1) and (ureDataPayload_full_n = ap_const_logic_0)) or ((ure_state_load_reg_548 = ap_const_lv2_2) and (ureDataPayload_full_n = ap_const_logic_0)));
    end process;


    ap_condition_206_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_206 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_243_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001)
    begin
                ap_condition_243 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_done_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= real_start;

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((real_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_sendWord_last_V_reg_174 <= "X";

    ap_predicate_op26_read_state1_assign_proc : process(grp_nbreadreq_fu_134_p6, ure_state)
    begin
                ap_predicate_op26_read_state1 <= ((grp_nbreadreq_fu_134_p6 = ap_const_lv1_1) and (ure_state = ap_const_lv2_0));
    end process;


    ap_predicate_op75_write_state2_assign_proc : process(ure_state_load_reg_548, tmp_8_reg_552)
    begin
                ap_predicate_op75_write_state2 <= ((tmp_8_reg_552 = ap_const_lv1_1) and (ure_state_load_reg_548 = ap_const_lv2_1));
    end process;


    ap_predicate_op81_write_state2_assign_proc : process(ure_state_load_reg_548, tmp_reg_572)
    begin
                ap_predicate_op81_write_state2 <= ((tmp_reg_572 = ap_const_lv1_1) and (ure_state_load_reg_548 = ap_const_lv2_0));
    end process;


    ap_predicate_op84_write_state2_assign_proc : process(ure_state_load_reg_548, tmp_reg_572, tmp_23_reg_576)
    begin
                ap_predicate_op84_write_state2 <= ((tmp_23_reg_576 = ap_const_lv1_1) and (tmp_reg_572 = ap_const_lv1_1) and (ure_state_load_reg_548 = ap_const_lv2_0));
    end process;


    ap_predicate_op8_read_state1_assign_proc : process(grp_nbreadreq_fu_134_p6, ure_state)
    begin
                ap_predicate_op8_read_state1 <= ((grp_nbreadreq_fu_134_p6 = ap_const_lv1_1) and (ure_state = ap_const_lv2_1));
    end process;

    ap_ready <= internal_ap_ready;

    ap_reset_idle_pp0_assign_proc : process(real_start, ap_idle_pp0_0to0)
    begin
        if (((real_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_198_p1 <= rxUdpDataIn_TLAST_int_regslice;
    grp_nbreadreq_fu_134_p6 <= (0=>(rxUdpDataIn_TVALID_int_regslice), others=>'-');

    internal_ap_ready_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone)
    begin
        if (((real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    or_ln174_1_fu_496_p14 <= ((((((((((((ap_const_lv1_1 & p_Result_157_1_i_reg_635) & p_Result_157_i_reg_630) & p_Result_154_1_i_reg_625) & p_Result_154_i_reg_620) & p_Result_151_3_i_reg_615) & p_Result_151_2_i_reg_610) & p_Result_151_1_i_reg_605) & p_Result_151_i_reg_600) & p_Result_148_3_i_reg_595) & p_Result_148_2_i_reg_590) & p_Result_148_1_i_reg_585) & p_Result_148_i_reg_580);
    or_ln174_2_fu_519_p5 <= (((ap_const_lv29_10000000 & reg_226) & ap_const_lv224_lc_1) & reg_222);
    or_ln_fu_410_p5 <= (((ap_const_lv29_10000000 & trunc_ln414_1_fu_406_p1) & ap_const_lv224_lc_1) & trunc_ln414_fu_402_p1);
    p_Result_18_fu_453_p5 <= (prevWord_keep_V_1(63 downto 36) & reg_226);
    p_Result_s_fu_435_p5 <= (prevWord_data_V_1(511 downto 288) & reg_222);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    rxUdpDataIn_TDATA_blk_n_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_predicate_op8_read_state1, ap_predicate_op26_read_state1, ap_done_reg, ap_block_pp0_stage0, rxUdpDataIn_TVALID_int_regslice)
    begin
        if ((((ap_done_reg = ap_const_logic_0) and (ap_predicate_op26_read_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_done_reg = ap_const_logic_0) and (ap_predicate_op8_read_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            rxUdpDataIn_TDATA_blk_n <= rxUdpDataIn_TVALID_int_regslice;
        else 
            rxUdpDataIn_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    rxUdpDataIn_TREADY <= regslice_both_rxUdpDataIn_V_data_V_U_ack_in;

    rxUdpDataIn_TREADY_int_regslice_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_predicate_op8_read_state1, ap_predicate_op26_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op26_read_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op8_read_state1 = ap_const_boolean_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            rxUdpDataIn_TREADY_int_regslice <= ap_const_logic_1;
        else 
            rxUdpDataIn_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_20_fu_248_p3 <= rxUdpDataIn_TKEEP_int_regslice(28 downto 28);
    tmp_30_i_fu_471_p6 <= ((((ap_phi_reg_pp0_iter1_sendWord_last_V_reg_174 & trunc_ln674_12_reg_564) & trunc_ln674_10_fu_431_p1) & trunc_ln674_11_reg_559) & trunc_ln674_fu_427_p1);
    trunc_ln414_1_fu_406_p1 <= prevWord_keep_V_1(36 - 1 downto 0);
    trunc_ln414_fu_402_p1 <= prevWord_data_V_1(288 - 1 downto 0);
    trunc_ln674_10_fu_431_p1 <= prevWord_keep_V_1(36 - 1 downto 0);
    trunc_ln674_11_fu_240_p1 <= rxUdpDataIn_TDATA_int_regslice(224 - 1 downto 0);
    trunc_ln674_12_fu_244_p1 <= rxUdpDataIn_TKEEP_int_regslice(28 - 1 downto 0);
    trunc_ln674_fu_427_p1 <= prevWord_data_V_1(288 - 1 downto 0);

    ureDataPayload_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ureDataPayload_full_n, ure_state_load_reg_548, ap_predicate_op75_write_state2, ap_predicate_op84_write_state2, ap_block_pp0_stage0)
    begin
        if ((((ap_predicate_op84_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_predicate_op75_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ure_state_load_reg_548 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            ureDataPayload_blk_n <= ureDataPayload_full_n;
        else 
            ureDataPayload_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ureDataPayload_din_assign_proc : process(ure_state_load_reg_548, ap_predicate_op75_write_state2, ap_predicate_op84_write_state2, zext_ln174_fu_422_p1, zext_ln174_3_fu_483_p1, zext_ln174_2_fu_531_p1, ap_condition_243)
    begin
        if ((ap_const_boolean_1 = ap_condition_243)) then
            if ((ap_predicate_op84_write_state2 = ap_const_boolean_1)) then 
                ureDataPayload_din <= zext_ln174_2_fu_531_p1;
            elsif ((ap_predicate_op75_write_state2 = ap_const_boolean_1)) then 
                ureDataPayload_din <= zext_ln174_3_fu_483_p1;
            elsif ((ure_state_load_reg_548 = ap_const_lv2_2)) then 
                ureDataPayload_din <= zext_ln174_fu_422_p1;
            else 
                ureDataPayload_din
            end if;
        else 
            ureDataPayload_din
        end if; 
    end process;


    ureDataPayload_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ure_state_load_reg_548, ap_predicate_op75_write_state2, ap_predicate_op84_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op84_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op75_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ure_state_load_reg_548 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ureDataPayload_write <= ap_const_logic_1;
        else 
            ureDataPayload_write <= ap_const_logic_0;
        end if; 
    end process;


    ureMetaData_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ureMetaData_full_n, ap_predicate_op81_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op81_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ureMetaData_blk_n <= ureMetaData_full_n;
        else 
            ureMetaData_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ureMetaData_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln174_1_fu_496_p14),128));

    ureMetaData_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op81_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op81_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ureMetaData_write <= ap_const_logic_1;
        else 
            ureMetaData_write <= ap_const_logic_0;
        end if; 
    end process;

    ure_state_load_load_fu_230_p1 <= ure_state;
    zext_ln174_2_fu_531_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln174_2_fu_519_p5),1024));
    zext_ln174_3_fu_483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_i_fu_471_p6),1024));
    zext_ln174_fu_422_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_410_p5),1024));
    zext_ln414_2_fu_492_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_226),64));
    zext_ln414_fu_488_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_222),512));
end behav;
